(PartialAMCompositionality
 (eval_TCC1 0
  (eval_TCC1-1 nil 3673792267 ("" (existence-tcc) nil nil) nil nil))
 (amPartialRefStrongDef_TCC1 0
  (amPartialRefStrongDef_TCC1-1 nil 3673779643
   ("" (subtype-tcc) nil nil) nil nil))
 (amPartialRefStrongDef 0
  (amPartialRefStrongDef-2 "" 3673859874
   ("" (skolem 1 (pl am2 anSet))
    (("" (expand strongPartialRefinement)
      (("" (bddsimp)
        (("1" (skolem 1 c)
          (("1" (expand prod)
            (("1" (bddsimp)
              (("1" (expand "^^")
                (("1" (lemma unusedAssets)
                  (("1" (inst -1 "A(pl)" "K(pl)" anSet c)
                    (("1" (lemma unusedAssets)
                      (("1" (inst -1 am2 "K(pl)" anSet c)
                        (("1" (bddsimp)
                          (("1" (expand amPartialRef)
                            (("1" (lemma amRef)
                              (("1"
                                (inst
                                 -1
                                 "filter(anSet,A(pl))"
                                 "filter(anSet,am2)")
                                (("1"
                                  (bddsimp)
                                  (("1"
                                    (inst -2 "K(pl)" c)
                                    (("1"
                                      (typepred pl)
                                      (("1"
                                        (expand wfPL)
                                        (("1"
                                          (inst -1 c)
                                          (("1"
                                            (bddsimp)
                                            (("1"
                                              (replace -6 1)
                                              (("1"
                                                (expand intersection)
                                                (("1"
                                                  (expand member)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (replace -5 1)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -4 1 RL)
                                              (("2" (propax) nil nil))
                                              nil)
                                             ("3"
                                              (expand intersection)
                                              (("3"
                                                (expand member)
                                                (("3"
                                                  (flatten)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("4"
                                              (typepred pl)
                                              (("4"
                                                (expand wfPL)
                                                (("4"
                                                  (inst -1 c)
                                                  (("4"
                                                    (expand
                                                     intersection)
                                                    (("4"
                                                      (expand member)
                                                      (("4"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand intersection)
                            (("2" (expand member)
                              (("2" (flatten) nil nil)) nil))
                            nil)
                           ("3" (expand intersection)
                            (("3" (expand member)
                              (("3" (flatten) nil nil)) nil))
                            nil)
                           ("4" (expand intersection)
                            (("4" (expand member)
                              (("4" (flatten) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand subset?)
          (("2" (expand "^^")
            (("2" (skolem 1 c)
              (("2" (expand member)
                (("2" (bddsimp)
                  (("2" (expand intersection)
                    (("2" (expand member) (("2" (flatten) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (amPartialRef const-decl "bool" SPLPartialRefinementCommon nil)
    (filter const-decl "mapping" maps nil)
    (mapping type-eq-decl nil maps nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (amRef formula-decl nil SPLrefinement nil)
    (unusedAssets formula-decl nil PartialAMCompositionality nil)
    (subset? const-decl "bool" sets nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil))
   shostak)
  (amPartialRefStrongDef-1 nil 3673779802
   ("" (skolem 1 (pl am2 anSet))
    (("" (expand strongPartialRefinement)
      (("" (bddsimp)
        (("1" (skolem 1 c)
          (("1" (expand "^^")
            (("1" (bddsimp)
              (("1" (expand prod)
                (("1" (lemma unusedAssets)
                  (("1" (copy -1)
                    (("1" (inst -1 "A(pl)" "K(pl)" anSet c)
                      (("1" (inst -2 am2 "K(pl)" anSet c)
                        (("1" (lemma sameDom)
                          (("1" (inst -1 "A(pl)" am2 "K(pl)" c)
                            (("1" (replace -1 -3 RL)
                              (("1"
                                (bddsimp)
                                (("1"
                                  (lemma amRef)
                                  (("1"
                                    (expand amPartialRef)
                                    (("1"
                                      (inst
                                       -1
                                       "filter(anSet,A(pl))"
                                       "filter(anSet,am2)")
                                      (("1"
                                        (bddsimp)
                                        (("1"
                                          (inst -2 "K(pl)" c)
                                          (("1"
                                            (bddsimp)
                                            (("1"
                                              (replace -6 1)
                                              (("1"
                                                (replace -7 1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred pl)
                                              (("2"
                                                (expand wfPL)
                                                (("2"
                                                  (inst -1 c)
                                                  (("2"
                                                    (bddsimp)
                                                    (("2"
                                                      (replace -6 -2)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand subset?)
          (("2" (expand "^^")
            (("2" (skolem 1 c)
              (("2" (expand member) (("2" (bddsimp) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (amPartialRef const-decl "bool" SPLPartialRefinementCommon nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (mapping type-eq-decl nil maps nil)
    (filter const-decl "mapping" maps nil)
    (amRef formula-decl nil SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (unusedAssets formula-decl nil PartialAMCompositionality nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil))
   shostak))
 (amPartialRefSameDomStrongDef_TCC1 0
  (amPartialRefSameDomStrongDef_TCC1-1 nil 3679048588
   ("" (subtype-tcc) nil nil) nil nil))
 (amPartialRefSameDomStrongDef 0
  (amPartialRefSameDomStrongDef-2 nil 3679739669
   ("" (lemma amPartialRefStrongDef)
    (("" (skolem 1 (pl am2 anSet))
      (("" (expand strongPartialRefinement)
        (("" (bddsimp)
          (("1" (skolem 1 c)
            (("1" (bddsimp)
              (("1" (inst -1 pl am2 anSet)
                (("1" (bddsimp)
                  (("1" (expand prod)
                    (("1" (inst -3 c)
                      (("1" (bddsimp)
                        (("1" (expand intersection)
                          (("1" (expand member)
                            (("1" (expand subset?)
                              (("1"
                                (inst -2 c)
                                (("1"
                                  (expand member)
                                  (("1"
                                    (bddsimp)
                                    (("1"
                                      (expand "^^")
                                      (("1"
                                        (lemma evalPreservesDom)
                                        (("1"
                                          (expand amPartialRef)
                                          (("1"
                                            (lemma
                                             sameDomSameEvalResult)
                                            (("1"
                                              (inst
                                               -1
                                               "A(pl)"
                                               am2
                                               "K(pl)"
                                               c)
                                              (("1"
                                                (bddsimp)
                                                (("1"
                                                  (replace -2 1 RL)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand subset?)
            (("2" (skolem 1 c)
              (("2" (expand member)
                (("2" (expand "^^") (("2" (bddsimp) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((amPartialRefStrongDef formula-decl nil
     PartialAMCompositionality nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (member const-decl "bool" sets nil)
    (evalPreservesDom formula-decl nil PartialAMCompositionality
     nil)
    (sameDomSameEvalResult formula-decl nil
     PartialAMCompositionality nil)
    (amPartialRef const-decl "bool" SPLPartialRefinementCommon nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (subset? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil))
   nil)
  (amPartialRefSameDomStrongDef-1 nil 3679048589
   ("" (lemma amPartialRefStrongDef)
    (("" (skolem 1 (pl am2 anSet))
      (("" (expand strongPartialRefinement)
        (("" (bddsimp)
          (("1" (skolem 1 c)
            (("1" (bddsimp)
              (("1" (inst -1 pl am2 anSet)
                (("1" (bddsimp)
                  (("1" (expand prod)
                    (("1" (inst -5 c)
                      (("1" (bddsimp)
                        (("1" (expand intersection)
                          (("1" (expand member)
                            (("1" (expand subset?)
                              (("1"
                                (inst -4 c)
                                (("1"
                                  (expand member)
                                  (("1"
                                    (bddsimp)
                                    (("1"
                                      (expand "^^")
                                      (("1"
                                        (lemma evalPreservesDom)
                                        (("1"
                                          (expand amPartialRef)
                                          (("1"
                                            (lemma
                                             sameDomSameEvalResult)
                                            (("1"
                                              (inst
                                               -1
                                               "A(pl)"
                                               am2
                                               "K(pl)"
                                               c)
                                              (("1"
                                                (bddsimp)
                                                (("1"
                                                  (replace -2 1 RL)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand subset?)
            (("2" (skolem 1 c)
              (("2" (expand member)
                (("2" (expand "^^") (("2" (bddsimp) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((amPartialRefStrongDef formula-decl nil
     PartialAMCompositionality nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (member const-decl "bool" sets nil)
    (evalPreservesDom formula-decl nil PartialAMCompositionality
     nil)
    (sameDomSameEvalResult formula-decl nil
     PartialAMCompositionality nil)
    (amPartialRef const-decl "bool" SPLPartialRefinementCommon nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (subset? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil))
   shostak))
 (fullCompStrongDef_TCC1 0
  (fullCompStrongDef_TCC1-1 nil 3673779643 ("" (subtype-tcc) nil nil)
   nil nil))
 (fullCompStrongDef 0
  (fullCompStrongDef-1 nil 3673857757
   ("" (skolem 1 (pl fm2 am2 ck2 anSet s u))
    (("" (expand strongPartialRefinement)
      (("" (bddsimp)
        (("1" (skolem 1 c)
          (("1" (lemma "ckWeakerEqStrongDef")
            (("1" (lemma amPartialRefStrongDef)
              (("1" (inst -1 pl am2 anSet)
                (("1" (expand prod)
                  (("1" (expand strongPartialRefinement)
                    (("1" (bddsimp)
                      (("1" (expand intersection)
                        (("1" (expand member)
                          (("1" (flatten)
                            (("1" (expand prod)
                              (("1"
                                (use assetRefinement)
                                (("1"
                                  (expand preorder?)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand transitive?)
                                      (("1"
                                        (inst
                                         -2
                                         "([||](K(pl))(A(pl))(c))"
                                         "([||](K(pl))(am2)(c))"
                                         "([||](ck2)(am2)(c))")
                                        (("1"
                                          (bddsimp)
                                          (("1"
                                            (inst -6 c)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (inst
                                                 -9
                                                 "(# F:= F(pl), A:=am2, K:=K(pl) #)"
                                                 ck2
                                                 u)
                                                (("1"
                                                  (bddsimp)
                                                  (("1"
                                                    (inst -11 c)
                                                    (("1"
                                                      (bddsimp)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (inst -6 c)
                                            (("2" (bddsimp) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand subset?)
          (("2" (expand fmPartialRefinement)
            (("2" (skolem 1 c)
              (("2" (inst -1 c)
                (("2" (expand member)
                  (("2" (bddsimp)
                    (("2" (expand intersection)
                      (("2" (expand member) (("2" (flatten) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (expand subset?)
          (("3" (skolem 1 c)
            (("3" (expand member)
              (("3" (expand intersection)
                (("3" (expand "^^")
                  (("3" (expand member) (("3" (bddsimp) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   (([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (ckWeakerEqStrongDef formula-decl nil SPLPartialRefinementStrong
     nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (intersection const-decl "set" sets nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (transitive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (member const-decl "bool" sets nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (amPartialRefStrongDef formula-decl nil
     PartialAMCompositionality nil)
    (fmPartialRefinement const-decl "bool" SPLPartialRefinementCommon
     nil)
    (subset? const-decl "bool" sets nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil))
   shostak))
 (changeAssetIsAmPartRef 0
  (changeAssetIsAmPartRef-1 nil 3673981018
   ("" (skolem 1 (am1 am2 pairs a1 a2 an))
    (("" (bddsimp)
      (("" (use assetRefinement)
        (("" (expand preorder?)
          (("" (flatten)
            (("" (expand reflexive?)
              (("" (expand syntaxChangeAsset)
                (("" (flatten)
                  (("" (expand amPartialRef)
                    (("" (expand "|>")
                      (("" (bddsimp)
                        (("1" (skolem 1 an1)
                          (("1" (bddsimp)
                            (("1" (expand dom)
                              (("1"
                                (skolem -5 a3)
                                (("1"
                                  (expand filter)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand domain)
                                      (("1"
                                        (skolem -6 a4)
                                        (("1"
                                          (inst 1 a4 a4)
                                          (("1"
                                            (inst
                                             -1
                                             "singleton[Asset](a4)")
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (expand ow)
                                                (("1"
                                                  (decompose-equality)
                                                  (("1"
                                                    (decompose-equality)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "(an1,a4)")
                                                      (("1"
                                                        (bddsimp)
                                                        (("1"
                                                          (expand
                                                           union)
                                                          (("1"
                                                            (expand
                                                             member)
                                                            (("1"
                                                              (bddsimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           union)
                                                          (("2"
                                                            (expand
                                                             member)
                                                            (("2"
                                                              (bddsimp)
                                                              (("2"
                                                                (expand
                                                                 rm)
                                                                (("2"
                                                                  (bddsimp)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst 1 a4)
                                                nil
                                                nil)
                                               ("3"
                                                (expand ow)
                                                (("3"
                                                  (decompose-equality)
                                                  (("3"
                                                    (inst
                                                     -1
                                                     "(an1,a4)")
                                                    (("3"
                                                      (bddsimp)
                                                      (("1"
                                                        (expand union)
                                                        (("1"
                                                          (expand
                                                           member)
                                                          (("1"
                                                            (bddsimp)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand union)
                                                        (("2"
                                                          (expand
                                                           member)
                                                          (("2"
                                                            (bddsimp)
                                                            (("2"
                                                              (expand
                                                               rm)
                                                              (("2"
                                                                (bddsimp)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand dom)
                          (("2" (decompose-equality 1)
                            (("2" (bddsimp)
                              (("1"
                                (skolem -1 a3)
                                (("1"
                                  (expand filter)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand domain)
                                      (("1"
                                        (skolem -2 a4)
                                        (("1"
                                          (inst 1 a4)
                                          (("1"
                                            (bddsimp)
                                            (("1" (inst 1 a4) nil nil)
                                             ("2"
                                              (expand ow)
                                              (("2"
                                                (decompose-equality -6)
                                                (("2"
                                                  (inst -1 "(x!1,a4)")
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand union)
                                                      (("1"
                                                        (expand member)
                                                        (("1"
                                                          (bddsimp)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand union)
                                                      (("2"
                                                        (expand member)
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (expand rm)
                                                            (("2"
                                                              (bddsimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skolem -1 a3)
                                (("2"
                                  (expand filter)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (expand domain)
                                      (("2"
                                        (skolem -2 a4)
                                        (("2"
                                          (inst 1 a4)
                                          (("2"
                                            (bddsimp)
                                            (("1" (inst 1 a4) nil nil)
                                             ("2"
                                              (expand ow)
                                              (("2"
                                                (decompose-equality)
                                                (("2"
                                                  (inst -1 "(x!1,a4)")
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand union)
                                                      (("1"
                                                        (expand member)
                                                        (("1"
                                                          (bddsimp)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand union)
                                                      (("2"
                                                        (expand member)
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (expand rm)
                                                            (("2"
                                                              (bddsimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (\|> const-decl "bool" SPLrefinement nil)
    (dom const-decl "set[S]" maps nil)
    (filter const-decl "mapping" maps nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (rm const-decl "mapping" maps nil)
    (union const-decl "set" sets nil)
    (mapping type-eq-decl nil maps nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (member const-decl "bool" sets nil)
    (ow const-decl "mapping" maps nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (amPartialRef const-decl "bool" SPLPartialRefinementCommon nil)
    (syntaxChangeAsset const-decl "bool" PartialAMCompositionality
     nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (assetRefinement formula-decl nil SPLrefinement nil))
   shostak))
 (changeAssetStrongPartialRef 0
  (changeAssetStrongPartialRef-2 nil 3679754037
   ("" (lemma amPartialRefSameDomStrongDef)
    (("" (skolem 1 (pl am2 pairs a1 a2 an s))
      (("" (expand strongPartialRefinement)
        (("" (bddsimp)
          (("1" (skolem 1 c)
            (("1" (bddsimp)
              (("1" (lemma changeAssetIsAmPartRef)
                (("1" (inst -1 "A(pl)" am2 pairs a1 a2 an)
                  (("1" (bddsimp)
                    (("1" (inst -3 pl am2 "domain(rm(an,pairs))")
                      (("1" (bddsimp)
                        (("1" (expand "<>")
                          (("1" (decompose-equality)
                            (("1" (inst -1 c)
                              (("1"
                                (bddsimp)
                                (("1"
                                  (expand "^^")
                                  (("1"
                                    (lemma evalPreservesDom)
                                    (("1"
                                      (inst -1 "A(pl)" "K(pl)" c)
                                      (("1"
                                        (expand subset?)
                                        (("1"
                                          (expand member)
                                          (("1"
                                            (expand empty?)
                                            (("1"
                                              (expand member)
                                              (("1"
                                                (expand intersection)
                                                (("1"
                                                  (expand member)
                                                  (("1"
                                                    (expand
                                                     syntaxChangeAsset)
                                                    (("1"
                                                      (bddsimp)
                                                      (("1"
                                                        (expand ow -5)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (bddsimp)
                                                            (("1"
                                                              (decompose-equality)
                                                              (("1"
                                                                (expand
                                                                 union)
                                                                (("1"
                                                                  (expand
                                                                   member)
                                                                  (("1"
                                                                    (expand
                                                                     singleton)
                                                                    (("1"
                                                                      (expand
                                                                       prod)
                                                                      (("1"
                                                                        (inst
                                                                         -10
                                                                         c)
                                                                        (("1"
                                                                          (bddsimp)
                                                                          (("1"
                                                                            (skolem
                                                                             1
                                                                             an2)
                                                                            (("1"
                                                                              (bddsimp)
                                                                              (("1"
                                                                                (expand
                                                                                 dom)
                                                                                (("1"
                                                                                  (skolem
                                                                                   -6
                                                                                   a3)
                                                                                  (("1"
                                                                                    (expand
                                                                                     domain)
                                                                                    (("1"
                                                                                      (skolem
                                                                                       -10
                                                                                       a4)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -5
                                                                                         an2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           ow)
                                                                                          (("1"
                                                                                            (bddsimp)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   an2)
                                                                                                  (("1"
                                                                                                    (bddsimp)
                                                                                                    (("1"
                                                                                                      (skolem
                                                                                                       -2
                                                                                                       a5)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "(an2,a5)")
                                                                                                        (("1"
                                                                                                          (bddsimp)
                                                                                                          (("1"
                                                                                                            (decompose-equality)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst
                                                                                                             2
                                                                                                             a5)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       a4)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   dom)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     2
                                                                                                     a3)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst
                                                                                               1
                                                                                               a4)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               union)
                                                              (("2"
                                                                (decompose-equality)
                                                                (("2"
                                                                  (expand
                                                                   member)
                                                                  (("2"
                                                                    (expand
                                                                     singleton)
                                                                    (("2"
                                                                      (expand
                                                                       prod)
                                                                      (("2"
                                                                        (inst
                                                                         -9
                                                                         c)
                                                                        (("2"
                                                                          (bddsimp)
                                                                          (("2"
                                                                            (skolem
                                                                             2
                                                                             an2)
                                                                            (("2"
                                                                              (bddsimp)
                                                                              (("2"
                                                                                (inst
                                                                                 -2
                                                                                 an2)
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (expand
                                                                                     domain
                                                                                     -3)
                                                                                    (("2"
                                                                                      (skolem
                                                                                       -3
                                                                                       a3)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "(an2,a3)")
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (decompose-equality)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -7
                                                                                               an2)
                                                                                              (("1"
                                                                                                (bddsimp)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   domain)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     dom)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             -6
                                                                                             an2)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               domain
                                                                                               dom)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   3
                                                                                                   a3)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     rm
                                                                                                     3)
                                                                                                    (("2"
                                                                                                      (bddsimp)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         remove)
                                                                                                        (("2"
                                                                                                          (bddsimp)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -10
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             member)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand syntaxChangeAsset)
                          (("2" (flatten)
                            (("2" (expand ow)
                              (("2"
                                (lift-if)
                                (("2"
                                  (bddsimp)
                                  (("1"
                                    (expand union)
                                    (("1"
                                      (decompose-equality)
                                      (("1"
                                        (decompose-equality)
                                        (("1"
                                          (expand domain 1)
                                          (("1"
                                            (decompose-equality 1)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (skolem -1 a)
                                                (("1"
                                                  (inst -3 "(x!1,a)")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand member)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "(x!1,a2)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 a2)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 1
                                                                 a2)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (replace
                                                                 -2
                                                                 4)
                                                                (("3"
                                                                  (decompose-equality
                                                                   3)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand member)
                                                      (("2"
                                                        (inst
                                                         -2
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem -1 a)
                                                (("2"
                                                  (inst -2 "(x!1,a)")
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand member)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst
                                                             -4
                                                             "(x!1,a1)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 a1)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 1
                                                                 a1)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (decompose-equality
                                                                 3)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand member)
                                                      (("2"
                                                        (inst
                                                         -3
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand union)
                                    (("2"
                                      (decompose-equality)
                                      (("2"
                                        (decompose-equality)
                                        (("2"
                                          (expand domain 2)
                                          (("2"
                                            (decompose-equality 2)
                                            (("2"
                                              (bddsimp)
                                              (("1"
                                                (skolem -1 a)
                                                (("1"
                                                  (inst -3 "(x!1,a)")
                                                  (("1"
                                                    (expand member)
                                                    (("1"
                                                      (bddsimp)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (inst 1 a2)
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "(x!1,a2)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (decompose-equality
                                                                 2)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst
                                                         -2
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem -1 a)
                                                (("2"
                                                  (inst -2 "(x!1,a)")
                                                  (("2"
                                                    (expand member)
                                                    (("2"
                                                      (expand
                                                       singleton)
                                                      (("2"
                                                        (bddsimp)
                                                        (("1"
                                                          (inst 1 a1)
                                                          (("1"
                                                            (inst
                                                             -4
                                                             "(x!1,a1)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (decompose-equality
                                                                 2)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst 1 a)
                                                          (("2"
                                                            (inst
                                                             -3
                                                             "(x!1,a)")
                                                            (("2"
                                                              (bddsimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "<>")
            (("2" (decompose-equality)
              (("2" (expand subset?)
                (("2" (skolem 1 c)
                  (("2" (expand member)
                    (("2" (inst -1 c) (("2" (bddsimp) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((amPartialRefSameDomStrongDef formula-decl nil
     PartialAMCompositionality nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil)
    (changeAssetIsAmPartRef formula-decl nil
     PartialAMCompositionality nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "set[S]" maps nil)
    (eval const-decl "AM" PartialAMCompositionality nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (evalPreservesDom formula-decl nil PartialAMCompositionality
     nil)
    (subset? const-decl "bool" sets nil)
    (syntaxChangeAsset const-decl "bool" PartialAMCompositionality
     nil)
    (ow const-decl "mapping" maps nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (remove const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (<> const-decl "set[Conf]" PartialAMCompositionality nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (rm const-decl "mapping" maps nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (mapping type-eq-decl nil maps nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil))
   nil)
  (changeAssetStrongPartialRef-1 nil 3673966848
   ("" (lemma amPartialRefSameDomStrongDef)
    (("" (skolem 1 (pl am2 pairs a1 a2 an s))
      (("" (expand strongPartialRefinement)
        (("" (bddsimp)
          (("1" (skolem 1 c)
            (("1" (bddsimp)
              (("1" (lemma changeAssetIsAmPartRef)
                (("1" (inst -1 "A(pl)" am2 pairs a1 a2 an)
                  (("1" (bddsimp)
                    (("1" (inst -3 pl am2 "domain(rm(an,pairs))")
                      (("1" (bddsimp)
                        (("1" (inst -6 c)
                          (("1" (bddsimp)
                            (("1" (expand "<>")
                              (("1"
                                (decompose-equality)
                                (("1"
                                  (inst -1 c)
                                  (("1"
                                    (bddsimp)
                                    (("1"
                                      (expand "^^")
                                      (("1"
                                        (bddsimp)
                                        (("1"
                                          (lemma evalPreservesDom)
                                          (("1"
                                            (inst -1 "A(pl)" "K(pl)" c)
                                            (("1"
                                              (expand subset?)
                                              (("1"
                                                (skolem 1 an2)
                                                (("1"
                                                  (expand member)
                                                  (("1"
                                                    (inst -1 an2)
                                                    (("1"
                                                      (bddsimp)
                                                      (("1"
                                                        (expand
                                                         domain
                                                         1)
                                                        (("1"
                                                          (expand
                                                           empty?)
                                                          (("1"
                                                            (inst
                                                             -5
                                                             an2)
                                                            (("1"
                                                              (expand
                                                               member)
                                                              (("1"
                                                                (expand
                                                                 intersection)
                                                                (("1"
                                                                  (expand
                                                                   member)
                                                                  (("1"
                                                                    (bddsimp)
                                                                    (("1"
                                                                      (expand
                                                                       domain
                                                                       -2)
                                                                      (("1"
                                                                        (skolem
                                                                         -2
                                                                         a3)
                                                                        (("1"
                                                                          (expand
                                                                           syntaxChangeAsset)
                                                                          (("1"
                                                                            (bddsimp)
                                                                            (("1"
                                                                              (expand
                                                                               ow
                                                                               -5)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (bddsimp)
                                                                                  (("1"
                                                                                    (decompose-equality)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(an2,a3)")
                                                                                      (("1"
                                                                                        (bddsimp)
                                                                                        (("1"
                                                                                          (expand
                                                                                           union)
                                                                                          (("1"
                                                                                            (expand
                                                                                             member)
                                                                                            (("1"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 singleton)
                                                                                                (("1"
                                                                                                  (bddsimp)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 2
                                                                                                 a3)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     union)
                                                                                    (("2"
                                                                                      (decompose-equality)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "(an2,a3)")
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("1"
                                                                                            (expand
                                                                                             member)
                                                                                            (("1"
                                                                                              (expand
                                                                                               singleton)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             member)
                                                                                            (("2"
                                                                                              (inst
                                                                                               3
                                                                                               a3)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 rm)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (bddsimp)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       domain)
                                                                      (("2"
                                                                        (expand
                                                                         dom)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand syntaxChangeAsset)
                          (("2" (flatten)
                            (("2" (expand ow)
                              (("2"
                                (lift-if)
                                (("2"
                                  (bddsimp)
                                  (("1"
                                    (expand union)
                                    (("1"
                                      (decompose-equality)
                                      (("1"
                                        (decompose-equality)
                                        (("1"
                                          (expand domain 1)
                                          (("1"
                                            (decompose-equality 1)
                                            (("1"
                                              (bddsimp)
                                              (("1"
                                                (skolem -1 a)
                                                (("1"
                                                  (inst -3 "(x!1,a)")
                                                  (("1"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand member)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "(x!1,a2)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 a2)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 1
                                                                 a2)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (replace
                                                                 -2
                                                                 4)
                                                                (("3"
                                                                  (decompose-equality
                                                                   3)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand member)
                                                      (("2"
                                                        (inst
                                                         -2
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem -1 a)
                                                (("2"
                                                  (inst -2 "(x!1,a)")
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (expand member)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst
                                                             -4
                                                             "(x!1,a1)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 a1)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 1
                                                                 a1)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (decompose-equality
                                                                 3)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand member)
                                                      (("2"
                                                        (inst
                                                         -3
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand union)
                                    (("2"
                                      (decompose-equality)
                                      (("2"
                                        (decompose-equality)
                                        (("2"
                                          (expand domain 2)
                                          (("2"
                                            (decompose-equality 2)
                                            (("2"
                                              (bddsimp)
                                              (("1"
                                                (skolem -1 a)
                                                (("1"
                                                  (inst -3 "(x!1,a)")
                                                  (("1"
                                                    (expand member)
                                                    (("1"
                                                      (bddsimp)
                                                      (("1"
                                                        (expand
                                                         singleton)
                                                        (("1"
                                                          (inst 1 a2)
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "(x!1,a2)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (decompose-equality
                                                                 2)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst
                                                         -2
                                                         "(x!1,a)")
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst 1 a)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skolem -1 a)
                                                (("2"
                                                  (inst -2 "(x!1,a)")
                                                  (("2"
                                                    (expand member)
                                                    (("2"
                                                      (expand
                                                       singleton)
                                                      (("2"
                                                        (bddsimp)
                                                        (("1"
                                                          (inst 1 a1)
                                                          (("1"
                                                            (inst
                                                             -4
                                                             "(x!1,a1)")
                                                            (("1"
                                                              (bddsimp)
                                                              (("1"
                                                                (decompose-equality
                                                                 2)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst 1 a)
                                                          (("2"
                                                            (inst
                                                             -3
                                                             "(x!1,a)")
                                                            (("2"
                                                              (bddsimp)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "<>")
            (("2" (decompose-equality)
              (("2" (expand subset?)
                (("2" (skolem 1 c)
                  (("2" (expand member)
                    (("2" (inst -1 c) (("2" (bddsimp) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((amPartialRefSameDomStrongDef formula-decl nil
     PartialAMCompositionality nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil)
    (changeAssetIsAmPartRef formula-decl nil
     PartialAMCompositionality nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (dom const-decl "set[S]" maps nil)
    (eval const-decl "AM" PartialAMCompositionality nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (union const-decl "set" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (ow const-decl "mapping" maps nil)
    (syntaxChangeAsset const-decl "bool" PartialAMCompositionality
     nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (evalPreservesDom formula-decl nil PartialAMCompositionality
     nil)
    (^^ const-decl "set[Conf]" PartialAMCompositionality nil)
    (<> const-decl "set[Conf]" PartialAMCompositionality nil)
    (finite_intersection1 application-judgement "finite_set"
     finite_sets nil)
    (rm const-decl "mapping" maps nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (mapping type-eq-decl nil maps nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     PartialAMCompositionality nil)
    (CK formal-type-decl nil PartialAMCompositionality nil)
    (FM formal-type-decl nil PartialAMCompositionality nil)
    (Conf formal-type-decl nil PartialAMCompositionality nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset formal-type-decl nil PartialAMCompositionality nil)
    (AssetName formal-type-decl nil PartialAMCompositionality nil))
   shostak)))

