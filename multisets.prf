(|multiset_defs| (|difference_TCC1| "" (SUBTYPE-TCC) NIL NIL)
 (|remove_TCC1| "" (SUBTYPE-TCC) NIL NIL))
(|multiset_lemmas|
 (|extensionality| "" (SKOSIMP*)
  (("" (EXTENSIONALITY "[T -> nat]") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|empty_no_members| "" (GRIND) NIL NIL)
 (|empty_min| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|nonempty_member| "" (SKOSIMP*)
  (("" (SPLIT)
    (("1" (FLATTEN)
      (("1" (USE "extensionality") (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (GRIND) NIL NIL))
    NIL))
  NIL)
 (|submultiset_empty| "" (GRIND) NIL NIL)
 (|submultiset_reflexive| "" (GRIND) NIL NIL)
 (|submultiset_antisymmetric| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|submultiset_transitive| "" (GRIND) NIL NIL)
 (|submultiset_partial_order| "" (USE "extensionality")
  (("" (GRIND) NIL NIL)) NIL)
 (|union_empty| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|union_commutative| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|union_associative| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|union_submultiset| "" (GRIND) NIL NIL)
 (|union_diff_submultiset| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_empty| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_idempotent| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_commutative| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_associative| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_submultiset1| "" (GRIND) NIL NIL)
 (|intersection_submultiset2| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|intersection_lower_bound| "" (GRIND) NIL NIL)
 (|distribute_union_intersection| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|difference_empty1| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|difference_empty2| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|difference_difference| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|difference_submultiset| "" (GRIND) NIL NIL)
 (|nonempty_singleton| "" (SKOSIMP*)
  (("" (USE "empty_no_members")
    (("" (REPLACE -1 :DIR RL) (("" (GRIND) NIL NIL)) NIL)) NIL))
  NIL)
 (|nonempty_add| "" (SKOSIMP*)
  (("" (USE "empty_no_members")
    (("" (REPLACE -1 :DIR RL) (("" (GRIND) NIL NIL)) NIL)) NIL))
  NIL)
 (|member_remove| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|add_remove_member| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|remove_add_member| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|submultiset_add| "" (GRIND) NIL NIL)
 (|submultiset_remove| "" (GRIND) NIL NIL)
 (|add_as_union| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|singleton_as_add| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|remove_as_difference| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|remove_member_singleton| "" (SKOSIMP*)
  (("" (USE "extensionality") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|remove_singleton_empty| "" (SKOSIMP*)
  (("" (CASE "member(x!1,s!1)")
    (("1" (HIDE 1)
      (("1" (USE "extensionality" ("s" "s!1" "t" "singleton(x!1)"))
        (("1" (SPLIT)
          (("1" (PROPAX) NIL NIL)
           ("2" (SKOLEM!)
            (("2" (EXPAND "remove")
              (("2" (EXPAND "empty")
                (("2" (DECOMPOSE-EQUALITY -2)
                  (("2" (INST -1 "x!2")
                    (("2" (LIFT-IF)
                      (("2" (SPLIT)
                        (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "member_remove") (("2" (GRIND) NIL NIL)) NIL))
    NIL))
  NIL)
 (|members_subset| "" (GRIND) NIL NIL)
 (|members_empty| ""
  (USE "sets_lemmas.extensionality" ("a" "members(empty)"))
  (("" (GRIND) NIL NIL)) NIL)
 (|members_singleton| "" (SKOSIMP*)
  ((""
    (USE "sets_lemmas.extensionality" ("a" "members(singleton(x!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|members_union| "" (SKOSIMP*)
  ((""
    (USE "sets_lemmas.extensionality" ("a" "members(union(s!1,t!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|members_intersection| "" (SKOSIMP*)
  ((""
    (USE "sets_lemmas.extensionality"
         ("a" "members(intersection(s!1,t!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|members_difference| "" (GRIND) NIL NIL)
 (|members_add| "" (SKOSIMP*)
  (("" (USE "sets_lemmas.extensionality" ("a" "members(add(x!1,s!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|members_remove1| "" (SKOSIMP*)
  ((""
    (USE "sets_lemmas.extensionality" ("a" "members(remove(x!1,s!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|members_remove2| "" (SKOSIMP*)
  ((""
    (USE "sets_lemmas.extensionality" ("a" "members(remove(x!1,s!1))"))
    (("" (GRIND) NIL NIL)) NIL))
  NIL)
 (|nonempty_nonsingleton| "" (SKOSIMP*)
  (("" (USE "nonempty_member")
    (("" (FLATTEN)
      (("" (SPLIT)
        (("1" (HIDE -2 1)
          (("1" (SKOLEM!)
            (("1" (CASE "count(x!1,s!1) = 1")
              (("1" (HIDE 1)
                (("1" (INST?)
                  (("1" (USE "nonempty_member" ("s" "remove(x!1,s!1)"))
                    (("1" (FLATTEN)
                      (("1" (HIDE -2)
                        (("1" (SPLIT)
                          (("1" (SKOLEM!)
                            (("1" (INST 2 "x!1" "x!2")
                              (("1" (GRIND) NIL NIL)) NIL))
                            NIL)
                           ("2" (HIDE 3)
                            (("2" (USE "remove_singleton_empty")
                              (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (GRIND) NIL NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL))
  NIL))
(|finite_multiset_defs|
 (|finite_multiset_TCC1| "" (EXPAND "is_finite")
  (("" (EXPAND "finite_sets_def.is_finite")
    (("" (INST 1 "1" "LAMBDA x: 0")
      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
    NIL))
  NIL)
 (|members_TCC1| "" (SUBTYPE-TCC) NIL NIL))
(|finite_multiset_lemmas|
 (|finite_submultiset| "" (SKOSIMP* T)
  (("" (EXPAND "is_finite")
    (("" (USE "members_subset")
      (("" (USE "finite_subset") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL))
  NIL)
 (|finite_empty| "" (EXPAND "is_finite")
  (("" (REWRITE "members_empty") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|finite_singleton| "" (SKOSIMP* T)
  (("" (EXPAND "is_finite")
    (("" (REWRITE "members_singleton") (("" (GRIND) NIL NIL)) NIL))
    NIL))
  NIL)
 (|finite_union| "" (SKOSIMP* T)
  (("" (EXPAND "is_finite")
    (("" (REWRITE "members_union")
      (("" (USE "finite_sets_def.finite_union") NIL NIL)) NIL))
    NIL))
  NIL)
 (|finite_intersection1| "" (SKOSIMP* T)
  (("" (USE "intersection_submultiset1")
    (("" (USE "finite_submultiset") (("" (GRIND) NIL NIL)) NIL)) NIL))
  NIL)
 (|finite_intersection2| "" (SKOSIMP* T)
  (("" (REWRITE "intersection_commutative") (("" (GRIND) NIL NIL))
    NIL))
  NIL)
 (|finite_difference| "" (SKOSIMP* T)
  (("" (USE "difference_submultiset")
    (("" (USE "finite_submultiset") (("" (GRIND) NIL NIL)) NIL)) NIL))
  NIL)
 (|finite_add| "" (SKOSIMP* T)
  (("" (REWRITE "add_as_union")
    (("" (USE "finite_singleton") (("" (USE "finite_union") NIL NIL))
      NIL))
    NIL))
  NIL)
 (|finite_remove| "" (SKOSIMP* T)
  (("" (REWRITE "remove_as_difference")
    (("" (USE "finite_difference") NIL NIL)) NIL))
  NIL)
 (|size_empty| "" (GRIND) NIL NIL)
 (|size_singleton| "" (SKOLEM!)
  (("" (EXPAND "size")
    (("" (REWRITE "members_singleton")
      (("" (REWRITE "sum_singleton") (("" (GRIND) NIL NIL)) NIL)) NIL))
    NIL))
  NIL)
 (|size_add| "" (SKOSIMP* T)
  (("" (EXPAND "size")
    (("" (REWRITE "members_add")
      (("" (REWRITE "sum_add")
        (("1" (LIFT-IF)
          (("1" (SPLIT)
            (("1" (FLATTEN)
              (("1"
                (USE "sum_particular_gen"
                     ("S" "members(fs!1)" "f" "add(x!1,fs!1)" "t" "x!1"
                      "c" "count(x!1,fs!1)"))
                (("1"
                  (CASE "add(x!1, fs!1) WITH [x!1 := count(x!1, fs!1)] = fs!1")
                  (("1" (GRIND) NIL NIL)
                   ("2" (HIDE -1 2)
                    (("2" (USE "extensionality")
                      (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL)
                 ("2" (GRIND) NIL NIL))
                NIL))
              NIL)
             ("2" (FLATTEN)
              (("2"
                (USE "sum_eq_funs"
                     ("S" "members(fs!1)" "f" "add(x!1,fs!1)" "g"
                      "fs!1"))
                (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|empty_or_add| "" (SKOSIMP* T)
  (("" (USE "nonempty_member")
    (("" (FLATTEN)
      (("" (SPLIT -1)
        (("1" (SKOLEM!)
          (("1" (INST 2 "x!1" "remove(x!1,fs!1)")
            (("1" (REWRITE "add_remove_member") NIL NIL)) NIL))
          NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|empty_or_singleton_or_union| "" (SKOSIMP* T)
  (("" (CASE "fs!1 = empty")
    (("1" (PROPAX) NIL NIL)
     ("2" (CASE "EXISTS x: fs!1 = singleton(x)")
      (("1" (PROPAX) NIL NIL)
       ("2" (USE "nonempty_nonsingleton")
        (("2" (SPLIT)
          (("1" (HIDE 1 2 3 4)
            (("1" (SKOLEM!)
              (("1" (INST 1 "remove(x!1,fs!1)" "singleton(x!1)")
                (("1" (SPLIT)
                  (("1" (USE "remove_singleton_empty")
                    (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (USE "nonempty_singleton") NIL NIL)
                   ("3" (REWRITE "add_as_union" :DIR RL)
                    (("3" (USE "add_remove_member")
                      (("3" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (HIDE 1 2 3 4)
            (("2" (SKOLEM!)
              (("2" (INST 1 "remove(x!1,fs!1)" "singleton(x!1)")
                (("2" (SPLIT)
                  (("1" (USE "remove_singleton_empty")
                    (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (USE "nonempty_singleton") NIL NIL)
                   ("3" (REWRITE "add_as_union" :DIR RL)
                    (("3" (REWRITE "add_remove_member") NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|finite_multiset_induction| "" (SKOLEM!)
  (("" (FLATTEN)
    (("" (MEASURE-INDUCT "size(ft)" "ft")
      (("" (SKOLEM 1 "ft!1" T)
        (("" (FLATTEN)
          (("" (USE "empty_or_add")
            (("" (SPLIT)
              (("1" (GRIND) NIL NIL)
               ("2" (SKOLEM-TYPEPRED)
                (("2" (INST -6 "x!1" "ft!2")
                  (("2" (INST -4 "ft!2")
                    (("2" (SPLIT)
                      (("1" (GRIND) NIL NIL)
                       ("2" (HIDE-ALL-BUT (-1 -2 1))
                        (("2" (REPLACE -2)
                          (("2" (REWRITE "size_add")
                            (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|finite_multiset_induction_union| "" (SKOSIMP* T)
  (("" (USE "finite_multiset_induction" ("P" "P!1"))
    (("" (SPLIT)
      (("1" (INST -1 "ft!1") NIL NIL) ("2" (PROPAX) NIL NIL)
       ("3" (HIDE 2)
        (("3" (SKOLEM!)
          (("3" (REWRITE "add_as_union") (("3" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|size_union| "" (SKOLEM!)
  (("" (GENERALIZE "ft!1" "ft")
    (("" (TYPEPRED "fs!1")
      ((""
        (USE "finite_multiset_induction"
             ("P"
              "LAMBDA (ft: finite_multiset[T]): size(union(fs!1,ft)) = size(fs!1) + size(ft)"))
        (("" (SPLIT)
          (("1" (PROPAX) NIL NIL)
           ("2" (HIDE 2)
            (("2" (GRIND :REWRITES ("union_empty" "size_empty")) NIL
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (SKOSIMP* T)
              (("3" (REWRITE "add_as_union")
                (("3" (REWRITE "union_associative" :DIR RL)
                  (("3" (REWRITE "add_as_union" :DIR RL)
                    (("3" (REWRITE "add_as_union" :DIR RL)
                      (("3" (GRIND :REWRITES "size_add") NIL NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|size_is_0| ""
  (USE "finite_multiset_induction"
       ("P"
        "LAMBDA (fs: finite_multiset[T]): size(fs) = 0 IMPLIES fs = empty"))
  (("" (SPLIT)
    (("1" (PROPAX) NIL NIL)
     ("2" (HIDE 2)
      (("2" (SKOSIMP* T)
        (("2" (REWRITE "size_add") (("2" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL))
  NIL)
 (|size_is_1| ""
  (USE "finite_multiset_induction"
       ("P"
        "LAMBDA (fs: finite_multiset[T]): size(fs) = 1 IMPLIES (EXISTS x: fs = singleton(x))"))
  (("" (SPLIT)
    (("1" (PROPAX) NIL NIL)
     ("2" (HIDE 2)
      (("2" (SKOSIMP* T)
        (("2" (REWRITE "size_empty") (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKOSIMP* T)
        (("3" (HIDE -2)
          (("3" (INST 1 "x!1")
            (("3" (REWRITE "size_add")
              (("3" (USE "size_is_0" ("fs" "fs!1"))
                (("3" (USE "singleton_as_add") (("3" (GRIND) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|card_members_size| "" (USE "finite_multiset_induction")
  (("" (SPLIT)
    (("1" (PROPAX) NIL NIL)
     ("2" (HIDE 2)
      (("2"
        (GRIND :REWRITES
         ("size_empty" "members_empty" "card_emptyset"))
        NIL NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKOSIMP* T)
        (("3" (GRIND :REWRITES ("size_add" "members_add" "card_add"))
          NIL NIL))
        NIL))
      NIL))
    NIL))
  NIL)
 (|finite_multiset_disc| "" (SKOSIMP* T)
  (("" (USE "nonempty_add") (("" (GRIND) NIL NIL)) NIL)) NIL)
 (|finite_multiset_disc_union| "" (SKOSIMP* T)
  (("" (SPLIT)
    (("1" (SKOSIMP* T)
      (("1" (USE "size_empty")
        (("1" (USE "size_singleton")
          (("1" (REPLACE -3 :DIR RL)
            (("1" (REPLACE -4 :DIR RL) (("1" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOSIMP* T)
      (("2" (USE "size_empty")
        (("2" (USE "size_union")
          (("2" (REPLACE -5 :DIR RL)
            (("2" (REPLACE -6 :DIR RL)
              (("2" (USE "size_is_0" ("fs" "ft1!1"))
                (("2" (USE "size_is_0" ("fs" "ft2!1"))
                  (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (SKOSIMP* T)
      (("3" (USE "size_singleton")
        (("3" (USE "size_union")
          (("3" (REPLACE -5 :DIR RL)
            (("3" (REPLACE -6 :DIR RL)
              (("3" (CASE "size(ft1!1) = 0")
                (("1" (USE "size_is_0" ("fs" "ft1!1"))
                  (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (USE "size_is_0" ("fs" "ft2!1"))
                  (("2" (REPLACE -3)
                    (("2" (HIDE -3 -6 -7 -8 2)
                      (("2"
                        (NAME-REPLACE*
                         ("n1" "size(ft1!1)" "n2" "size(ft2!1)"))
                        (("2" (HIDE -3 -4) (("2" (GRIND) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL))
  NIL))

