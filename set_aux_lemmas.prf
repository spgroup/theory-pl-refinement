(set_aux_lemmas
 (cardUnion 0
  (cardUnion-1 nil 3499762383 3499762390
   ("" (lemma finite_sets[T].card_add)
    (("" (lemma sets_lemmas[T].add_as_union)
      (("" (lemma sets_lemmas[T].union_commutative)
        (("" (skolem 1 (an S))
          (("" (instantiate -1 (S an))
            (("" (instantiate -2 (S an))
              (("" (instantiate -3 (S an))
                (("" (expand member)
                  (("" (flatten) (("" (assert) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((add_as_union formula-decl nil sets_lemmas nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (member const-decl "bool" sets nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (card_add formula-decl nil finite_sets nil)
    (T formal-type-decl nil set_aux_lemmas nil))
   6783 60 t shostak))
 (setMember 0
  (setMember-1 nil 3499762394 3499762415
   ("" (skolem 1 (ans an))
    (("" (expand member)
      (("" (flatten)
        (("" (instantiate 1 "remove(an,ans)")
          (("" (bddsimp)
            (("1" (expand remove) (("1" (propax) nil nil)) nil)
             ("2" (lemma sets_lemmas[T].add_remove_member)
              (("2" (instantiate -1 (ans an))
                (("2" (expand member)
                  (("2" (assert)
                    (("2" (lemma sets_lemmas[T].add_as_union)
                      (("2" (instantiate -1 ("remove(an,ans)" an))
                        (("2" (assert)
                          (("2" (replace -2 1 RL)
                            (("2" (expand singleton)
                              (("2"
                                (expand remove +)
                                (("2"
                                  (expand union +)
                                  (("2"
                                    (expand add +)
                                    (("2"
                                      (expand member)
                                      (("2"
                                        (decompose-equality 1)
                                        (("2"
                                          (bddsimp)
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil)
                                           ("3" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((member const-decl "bool" sets nil)
    (finite_remove application-judgement "finite_set" finite_sets nil)
    (add_remove_member formula-decl nil sets_lemmas nil)
    (add_as_union formula-decl nil sets_lemmas nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (union const-decl "set" sets nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (add const-decl "(nonempty?)" sets nil)
    (nonempty_finite_union1 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (T formal-type-decl nil set_aux_lemmas nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (remove const-decl "set" sets nil))
   20164 90 t shostak))
 (lemmaUnionRemove 0
  (lemmaUnionRemove-1 nil 3499762425 3499762547
   ("" (skolem 1 (x y item))
    (("" (flatten)
      (("" (expand member)
        (("" (decompose-equality -1)
          (("" (decompose-equality 1)
            (("" (expand* union singleton remove member)
              (("" (bddsimp)
                (("1" (instantiate -2 x!1) (("1" (assert) nil nil))
                  nil)
                 ("2" (instantiate -2 x!1) (("2" (assert) nil nil))
                  nil)
                 ("3" (instantiate -2 x!1) (("3" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((T formal-type-decl nil set_aux_lemmas nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (remove const-decl "set" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_remove application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil))
   122906 70 t shostak))
 (lemmaUnionRemove2 0
  (lemmaUnionRemove2-1 nil 3501581874 3501581993
   ("" (skolem 1 (X i))
    (("" (flatten)
      (("" (expand* union singleton remove member)
        (("" (decompose-equality 1)
          (("" (bddsimp)
            (("1" (assert) nil nil)
             ("2" (flatten) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (T formal-type-decl nil set_aux_lemmas nil)
    (boolean nonempty-type-decl nil booleans nil)
    (union const-decl "set" sets nil)
    (remove const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil))
   35435 20 t shostak))
 (lemmaUnionRemove3 0
  (lemmaUnionRemove3-1 nil 3501582074 3501582110
   ("" (skolem 1 (X it1 it2))
    (("" (expand* union singleton remove member)
      (("" (flatten)
        (("" (decompose-equality 1)
          (("" (bddsimp)
            (("1" (replace -1) (("1" (propax) nil nil)) nil)
             ("2" (replace -1) (("2" (propax) nil nil)) nil)
             ("3" (flatten)
              (("3" (replace -1) (("3" (propax) nil nil)) nil)) nil)
             ("4" (flatten)
              (("4" (replace -1) (("4" (propax) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil)
    (union const-decl "set" sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (T formal-type-decl nil set_aux_lemmas nil)
    (boolean nonempty-type-decl nil booleans nil))
   36370 50 t shostak))
 (finiteIntersection 0
  (finiteIntersection-1 nil 3499762553 3499762555 ("" (grind) nil nil)
   unfinished
   ((finite_intersection2 application-judgement "finite_set"
     finite_sets nil))
   1763 10 t shostak))
 (finiteComprehension 0
  (finiteComprehension-1 nil 3499762559 3499762561 ("" (grind) nil nil)
   unfinished
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil set_aux_lemmas nil)
    (set type-eq-decl nil sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (injective? const-decl "bool" functions nil)
    (is_finite const-decl "bool" finite_sets nil))
   1775 90 t shostak))
 (finiteUnion 0
  (finiteUnion-1 nil 3499762571 3499762592
   ("" (lemma finite_sets[T].finite_union)
    (("" (skolem 1 (x y))
      (("" (flatten)
        (("" (instantiate -1 (x y))
          (("1" (propax) nil nil) ("2" (propax) nil nil)
           ("3" (propax) nil nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (finite_union judgement-tcc nil finite_sets nil)
    (T formal-type-decl nil set_aux_lemmas nil))
   20962 10 t shostak))
 (singletonMember 0
  (singletonMember-1 nil 3499762599 3499762607
   ("" (skolem 1 (x y))
    (("" (flatten)
      (("" (expand singleton) (("" (assert) nil nil)) nil)) nil))
    nil)
   unfinished ((singleton const-decl "(singleton?)" sets nil)) 8076 10
   t shostak))
 (memberUnion 0
  (memberUnion-1 nil 3499762616 3499762618
   ("" (skolem 1 (x y s))
    (("" (flatten)
      (("" (expand union)
        (("" (expand singleton)
          (("" (expand member) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   unfinished
   ((singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil))
   1504 10 t shostak)))

