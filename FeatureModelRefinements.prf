(FeatureModelRefinements
 (wtFormAddNode 0
  (wtFormAddNode-1 nil 3560765737 3560765762
   ("" (skolem 1 (fm1 fm2 n1 n2))
    (("" (expand wfTree)
      (("" (flatten)
        (("" (induct f 2)
          (("1" (grind) nil nil) ("2" (grind) nil nil)
           ("3" (grind) nil nil) ("4" (grind) nil nil)
           ("5" (grind) nil nil) ("6" (grind) nil nil)
           ("7" (grind) nil nil) ("8" (grind) nil nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((wfTree const-decl "bool" FeatureModel nil)
    (fm1 skolem-const-decl "FM" FeatureModelRefinements nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (fm2 skolem-const-decl "FM" FeatureModelRefinements nil)
    (wt def-decl "boolean" FormulaTheory nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (Formula__induction formula-decl nil Formula__adt nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   25110 200 t shostak))
 (addMandatoryWF 0
  (addMandatoryWF-1 nil 3560765773 3560766103
   ("" (skolem 1 (fm1 F G fm2))
    (("" (typepred fm1)
      (("" (expand wfFM)
        (("" (expand* wfTree wfFormulae addMandatoryNode)
          (("" (flatten)
            (("" (lemma wtFormAddNode)
              (("" (instantiate -1 (fm1 fm2 F G))
                (("" (expand wfTree)
                  (("" (assert)
                    (("" (skolem 2 form)
                      (("" (flatten)
                        (("" (replace -4)
                          (("" (expand* union extend singleton member)
                            (("" (bddsimp)
                              (("1"
                                (instantiate -2 form)
                                (("1"
                                  (instantiate -1 form)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -7)
                                (("2"
                                  (expand wt +)
                                  (("2"
                                    (expand wt +)
                                    (("2"
                                      (replace -3)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (bddsimp)
                                          (("1"
                                            (instantiate 2 F)
                                            (("1" (flatten) nil nil))
                                            nil)
                                           ("2"
                                            (instantiate 2 G)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (replace -7)
                                (("3"
                                  (expand wt +)
                                  (("3"
                                    (expand wt +)
                                    (("3"
                                      (replace -3)
                                      (("3"
                                        (assert)
                                        (("3"
                                          (bddsimp)
                                          (("1"
                                            (instantiate 2 G)
                                            (("1" (propax) nil nil))
                                            nil)
                                           ("2"
                                            (instantiate 2 F)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (addMandatoryNode const-decl "bool" FeatureModelRefinements nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (wtFormAddNode formula-decl nil FeatureModelRefinements nil)
    (wt def-decl "boolean" FormulaTheory nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (extend const-decl "R" extend nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_extend application-judgement "(nonempty?[T])"
     extend_set_props nil)
    (finite_extend application-judgement "finite_set[T]"
     extend_set_props nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil))
   329995 180 t shostak))
 (addMandatoryT_TCC1 0
  (addMandatoryT_TCC1-1 nil 3560596452 3560770629
   ("" (skolem 1 (fm1 F G fm2))
    (("" (use addMandatoryWF)
      (("" (flatten) (("" (assert) (("" (skosimp) nil nil)) nil)) nil))
      nil))
    nil)
   proved
   ((addMandatoryWF formula-decl nil FeatureModelRefinements nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil))
   20935 10 t nil))
 (addMandatoryT_TCC2 0
  (addMandatoryT_TCC2-1 nil 3560596452 3560770648
   ("" (skosimp)
    (("" (skosimp)
      (("" (use addMandatoryWF) (("" (assert) nil nil)) nil)) nil))
    nil)
   proved
   ((Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (addMandatoryWF formula-decl nil FeatureModelRefinements nil))
   13082 10 t nil))
 (addMandatoryT_TCC3 0
  (addMandatoryT_TCC3-1 nil 3560596452 3560770669
   ("" (skosimp)
    (("" (use addMandatoryWF) (("" (assert) nil nil)) nil)) nil)
   proved
   ((addMandatoryWF formula-decl nil FeatureModelRefinements nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil))
   17850 20 t nil))
 (addMandatoryT 0
  (addMandatoryT-1 nil 3560766112 3560769125
   ("" (skolem 1 (fm1 F G))
    (("" (lemma addMandatoryWF)
      ((""
        (instantiate 1
         "(# features:=union(features(fm1),G), formulae:=union(formulae(fm1),union(IMPLIES_FORMULA(NAME_FORMULA(G),NAME_FORMULA(F)),IMPLIES_FORMULA(NAME_FORMULA(F),NAME_FORMULA(G)))) #)")
        (("" (flatten)
          (("" (bddsimp)
            (("1"
              (instantiate -1
               (fm1 F G
                "(# features:=union(features(fm1),G), formulae:=union(formulae(fm1),union(IMPLIES_FORMULA(NAME_FORMULA(G),NAME_FORMULA(F)),IMPLIES_FORMULA(NAME_FORMULA(F),NAME_FORMULA(G)))) #)"))
              (("1" (assert) nil nil)) nil)
             ("2"
              (expand* addMandatoryNode semantics satImpConsts names
               satExpConsts union singleton extend remove member)
              (("2" (flatten)
                (("2" (lemma formNames2)
                  (("2" (lemma satisfies2)
                    (("2" (skolem 2 c)
                      (("2" (flatten)
                        (("2" (typepred fm1)
                          (("2" (expand* wfFM wfTree wfFormulae)
                            (("2" (bddsimp)
                              (("1"
                                (skolem 2 form)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (instantiate -1 form)
                                    (("1"
                                      (instantiate -3 (fm1 form G))
                                      (("1"
                                        (instantiate -2 (form c G))
                                        (("1"
                                          (assert)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (instantiate -6 form)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (expand remove)
                                                    (("1"
                                                      (expand member)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand wfTree)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skolem 2 name)
                                (("2"
                                  (flatten)
                                  (("2"
                                    (instantiate -6 name)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (skolem 3 form)
                                (("3"
                                  (flatten)
                                  (("3"
                                    (instantiate -7 form)
                                    (("3" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (skolem 3 name)
                                (("4"
                                  (flatten)
                                  (("4"
                                    (instantiate -6 name)
                                    (("4" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3"
              (expand* addMandatoryNode semantics satImpConsts names
               satExpConsts union singleton extend remove member)
              (("3" (flatten)
                (("3" (lemma formNames2)
                  (("3" (lemma satisfies1)
                    (("3" (expand* union singleton extend member)
                      (("3" (skolem 2 c)
                        (("3" (flatten)
                          (("3" (typepred fm1)
                            (("3" (expand* wfFM wfTree wfFormulae)
                              (("3"
                                (bddsimp)
                                (("1"
                                  (skolem 2 form)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (instantiate -1 form)
                                      (("1"
                                        (instantiate -2 (form c G))
                                        (("1"
                                          (instantiate -3 (fm1 form G))
                                          (("1"
                                            (instantiate -7 form)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (bddsimp)
                                                (("1"
                                                  (replace -6)
                                                  (("1"
                                                    (expand
                                                     satisfies
                                                     +)
                                                    (("1"
                                                      (expand
                                                       satisfies
                                                       +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (instantiate
                                                           3
                                                           F)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -6)
                                                  (("2"
                                                    (expand
                                                     satisfies
                                                     +)
                                                    (("2"
                                                      (expand
                                                       satisfies
                                                       +)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (instantiate
                                                           5
                                                           G)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (replace -7)
                                                  (("3"
                                                    (expand
                                                     satisfies
                                                     +)
                                                    (("3"
                                                      (expand
                                                       satisfies
                                                       +)
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (instantiate
                                                           4
                                                           F)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (replace -7)
                                                  (("4"
                                                    (expand
                                                     satisfies
                                                     +)
                                                    (("4"
                                                      (expand
                                                       satisfies
                                                       +)
                                                      (("4"
                                                        (flatten)
                                                        (("4"
                                                          (instantiate
                                                           4
                                                           G)
                                                          (("4"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand wfTree)
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skolem 2 name)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (instantiate -6 name)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skolem 3 form)
                                  (("3"
                                    (flatten)
                                    (("3"
                                      (bddsimp)
                                      (("1"
                                        (instantiate -7 form)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (replace -9)
                                        (("2"
                                          (expand satisfies +)
                                          (("2"
                                            (expand satisfies +)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (skolem -10 n1)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (instantiate -6 n1)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (replace -9)
                                        (("3"
                                          (expand satisfies +)
                                          (("3"
                                            (expand satisfies +)
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (skolem -10 n1)
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (skolem 3 name)
                                  (("4"
                                    (flatten)
                                    (("4"
                                      (instantiate -6 name)
                                      (("4" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((addMandatoryWF formula-decl nil FeatureModelRefinements nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (union const-decl "set" sets nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (IMPLIES? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (IMPLIES_FORMULA adt-constructor-decl
     "[[Formula_, Formula_] -> (IMPLIES?)]" Formula__adt nil)
    (NAME? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (NAME_FORMULA adt-constructor-decl "[Name -> (NAME?)]" Formula__adt
     nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (satisfies1 formula-decl nil FormulaTheory nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (addMandatoryNode const-decl "bool" FeatureModelRefinements nil)
    (formNames2 formula-decl nil FormulaTheory nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (fm1 skolem-const-decl "WFM" FeatureModelRefinements nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (satisfies2 formula-decl nil FormulaTheory nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (finite_extend application-judgement "finite_set[T]"
     extend_set_props nil)
    (nonempty_extend application-judgement "(nonempty?[T])"
     extend_set_props nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_finite_union2 application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   3012322 1270 t shostak))
 (addMandatoryTWF 0
  (addMandatoryTWF-1 nil 3560769224 3560770559
   ("" (skolem 1 (fm1 F G fm2))
    (("" (flatten)
      (("" (bddsimp)
        (("1" (lemma addMandatoryWF)
          (("1" (use addMandatoryWF) (("1" (assert) nil nil)) nil))
          nil)
         ("2" (typepred fm1)
          (("2" (lemma formNames2)
            (("2" (lemma satisfies2)
              (("2"
                (expand* addMandatoryNode semantics satImpConsts
                 satExpConsts wfFM wfTree wfFormulae union singleton
                 extend member)
                (("2" (skolem 1 c)
                  (("2" (flatten)
                    (("2" (bddsimp)
                      (("1" (skolem 2 form)
                        (("1" (flatten)
                          (("1" (instantiate -3 form)
                            (("1" (instantiate -1 (form c G))
                              (("1"
                                (instantiate -2 (fm1 form G))
                                (("1"
                                  (assert)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (instantiate -6 form)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -3)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand wfTree)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skolem 2 name)
                        (("2" (flatten)
                          (("2" (expand* union singleton remove member)
                            (("2" (flatten)
                              (("2"
                                (instantiate -7 name)
                                (("2"
                                  (assert)
                                  (("2"
                                    (replace -4)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (skolem 3 form)
                        (("3" (flatten)
                          (("3" (instantiate -8 form)
                            (("3" (replace -5) (("3" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("4" (skolem 3 name)
                        (("4" (flatten)
                          (("4" (instantiate -7 name)
                            (("4" (assert)
                              (("4"
                                (replace -4)
                                (("4" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (lemma formNames2)
          (("3" (lemma satisfies1)
            (("3" (typepred fm1)
              (("3"
                (expand* addMandatoryNode semantics satImpConsts
                 satExpConsts wfFM wfTree wfFormulae union singleton
                 extend member)
                (("3" (skolem 1 c)
                  (("3" (flatten)
                    (("3" (bddsimp)
                      (("1" (skolem 2 form)
                        (("1" (flatten)
                          (("1" (instantiate -1 form)
                            (("1" (instantiate -2 (form c G))
                              (("1"
                                (instantiate -3 (fm1 form G))
                                (("1"
                                  (assert)
                                  (("1"
                                    (instantiate -8 form)
                                    (("1"
                                      (replace -5)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (bddsimp -10)
                                          (("1"
                                            (assert)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (replace -2)
                                            (("2"
                                              (expand satisfies +)
                                              (("2"
                                                (expand satisfies +)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (instantiate 2 F)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (replace -2)
                                            (("3"
                                              (expand satisfies +)
                                              (("3"
                                                (expand satisfies +)
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (instantiate 2 G)
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand wfTree)
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skolem 2 name)
                        (("2" (flatten)
                          (("2" (instantiate -7 name)
                            (("2" (assert)
                              (("2"
                                (replace -4)
                                (("2"
                                  (assert)
                                  (("2" (bddsimp) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (skolem 3 form)
                        (("3" (flatten)
                          (("3" (replace -5)
                            (("3" (assert)
                              (("3"
                                (bddsimp)
                                (("1"
                                  (instantiate -8 form)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (replace -10)
                                  (("2"
                                    (expand satisfies +)
                                    (("2"
                                      (expand satisfies +)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (skolem -11 n1)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (instantiate -7 n1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (replace -10)
                                  (("3"
                                    (expand satisfies +)
                                    (("3"
                                      (expand satisfies +)
                                      (("3"
                                        (flatten)
                                        (("3"
                                          (skolem -11 n1)
                                          (("3"
                                            (flatten)
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("4" (skolem 3 name)
                        (("4" (flatten)
                          (("4" (instantiate -7 name)
                            (("4" (assert)
                              (("4"
                                (replace -4)
                                (("4" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((satisfies def-decl "boolean" FormulaTheory nil)
    (satisfies1 formula-decl nil FormulaTheory nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (satisfies2 formula-decl nil FormulaTheory nil)
    (fm1 skolem-const-decl "WFM" FeatureModelRefinements nil)
    (Configuration type-eq-decl nil Name nil)
    (remove const-decl "set" sets nil)
    (addMandatoryNode const-decl "bool" FeatureModelRefinements nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (extend const-decl "R" extend nil)
    (union const-decl "set" sets nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (formNames2 formula-decl nil FormulaTheory nil)
    (addMandatoryWF formula-decl nil FeatureModelRefinements nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil))
   1335466 660 t shostak))
 (addOptionalNode_TCC1 0
  (addOptionalNode_TCC1-1 nil 3560596452 3560770712
   ("" (skosimp)
    (("" (skosimp)
      (("" (assert)
        (("" (expand singleton) (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   proved
   ((singleton const-decl "(singleton?)" sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil))
   18629 30 t nil))
 (wfPreservation 0
  (wfPreservation-1 nil 3560770803 3560770959
   ("" (skolem 1 (fm1 F G fm2))
    (("" (typepred fm1)
      (("" (expand* addOptionalNode wfFM wfTree wfFormulae)
        (("" (flatten)
          (("" (use wtFormAddNode)
            (("" (expand wfTree)
              (("" (assert)
                (("" (replace -5)
                  (("" (skolem 2 form)
                    (("" (expand union +)
                      (("" (expand singleton +)
                        (("" (expand member)
                          (("" (flatten)
                            (("" (instantiate -2 form)
                              ((""
                                (instantiate -1 form)
                                ((""
                                  (assert)
                                  ((""
                                    (replace -4)
                                    ((""
                                      (expand wt +)
                                      ((""
                                        (expand wt +)
                                        ((""
                                          (replace -1)
                                          ((""
                                            (expand*
                                             union
                                             singleton
                                             member)
                                            ((""
                                              (bddsimp)
                                              (("1"
                                                (instantiate 1 F)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (instantiate 1 F)
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("3"
                                                (instantiate 4 F)
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (instantiate 4 G)
                                                (("4"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (wt def-decl "boolean" FormulaTheory nil)
    (singleton const-decl "(singleton?)" sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (wtFormAddNode formula-decl nil FeatureModelRefinements nil)
    (addOptionalNode const-decl "bool" FeatureModelRefinements nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil))
   156518 130 t shostak))
 (addNode_TCC1 0
  (addNode_TCC1-1 nil 3560596452 3560770734
   ("" (lemma wfPreservation) (("" (propax) nil nil)) nil) proved
   ((wfPreservation formula-decl nil FeatureModelRefinements nil))
   17236 10 t nil))
 (addNode 0
  (addNode-1 nil 3560770757 3560771096
   ("" (skolem 1 (fm1 F G))
    ((""
      (instantiate 1
       "(# features:=union(features(fm1),G), formulae:=union(formulae(fm1), IMPLIES_FORMULA(NAME_FORMULA(G),NAME_FORMULA(F))) #)")
      (("1" (lemma wfPreservation)
        (("1"
          (instantiate -1
           (fm1 F G
            "(# features:=union(features(fm1),G), formulae:=union(formulae(fm1), IMPLIES_FORMULA(NAME_FORMULA(G),NAME_FORMULA(F))) #)"))
          (("1" (flatten)
            (("1" (assert)
              (("1"
                (expand* addOptionalNode refines subset? semantics
                 satImpConsts satExpConsts union singleton member)
                (("1" (skolem 1 c)
                  (("1" (flatten)
                    (("1" (bddsimp)
                      (("1" (skolem 2 form)
                        (("1" (flatten)
                          (("1" (instantiate -4 form)
                            (("1" (assert)
                              (("1"
                                (replace -4)
                                (("1"
                                  (expand satisfies +)
                                  (("1"
                                    (expand satisfies +)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (skolem -5 n1)
                                        (("1"
                                          (instantiate -3 n1)
                                          (("1"
                                            (flatten)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skolem 2 name)
                        (("2" (flatten)
                          (("2" (instantiate -3 name)
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skosimp)
        (("2" (expand singleton)
          (("2" (replace -1) (("2" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   proved
   ((nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (addOptionalNode const-decl "bool" FeatureModelRefinements nil)
    (subset? const-decl "bool" sets nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (member const-decl "bool" sets nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (refines const-decl "bool" FeatureModelSemantics nil)
    (wfPreservation formula-decl nil FeatureModelRefinements nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (union const-decl "set" sets nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (IMPLIES? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (IMPLIES_FORMULA adt-constructor-decl
     "[[Formula_, Formula_] -> (IMPLIES?)]" Formula__adt nil)
    (NAME? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (NAME_FORMULA adt-constructor-decl "[Name -> (NAME?)]" Formula__adt
     nil)
    (F skolem-const-decl "Name" FeatureModelRefinements nil)
    (G skolem-const-decl "Name" FeatureModelRefinements nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil))
   117440 130 t shostak))
 (addOptNode 0
  (addOptNode-1 nil 3560771121 3560771300
   ("" (skolem 1 (fm1 F G fm2))
    (("" (flatten)
      (("" (lemma wfPreservation)
        (("" (instantiate -1 (fm1 F G fm2))
          (("" (assert)
            ((""
              (expand* addOptionalNode refines subset? semantics
               satImpConsts satExpConsts union singleton member)
              (("" (skolem 1 c)
                (("" (flatten)
                  (("" (replace -4)
                    (("" (replace -2)
                      (("" (hide (-2 -4))
                        (("" (assert)
                          (("" (bddsimp)
                            (("1" (skolem 2 form)
                              (("1"
                                (flatten)
                                (("1"
                                  (instantiate -4 form)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -4 3)
                                      (("1"
                                        (expand satisfies)
                                        (("1"
                                          (expand satisfies)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (skolem -5 n1)
                                              (("1"
                                                (instantiate -3 n1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skolem 2 name)
                              (("2"
                                (flatten)
                                (("2"
                                  (instantiate -3 name)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((refines const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (subset? const-decl "bool" sets nil)
    (addOptionalNode const-decl "bool" FeatureModelRefinements nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (wfPreservation formula-decl nil FeatureModelRefinements nil))
   179431 180 t shostak)))

