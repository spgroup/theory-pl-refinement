(ConfigurationKnowledge
 (lemmaSetComp 0
  (lemmaSetComp-1 nil 3488188581 3499765356
   ("" (expand intersection)
    (("" (expand member) (("" (propax) nil nil)) nil)) nil)
   unchecked
   ((member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil))
   32 10 t shostak))
 (evalCK_TCC1 0
  (evalCK_TCC1-4 nil 3507401248 3507401252
   ("" (skolem 1 (ck prod))
    (("" (lemma lemmaSetComp)
      (("" (instantiate -1 (ck prod))
        (("" (replace -1)
          (("" (typepred ck)
            (("" (lemma set_aux_lemmas[Item].finiteIntersection)
              ((""
                (instantiate -1
                 ("{i: Item | ck(i)}"
                  "{i: Item | satisfies(exp(i), prod)}"))
                (("1" (propax) nil nil)
                 ("2" (case "ck={i: Item | ck(i)}")
                  (("1" (assert) nil nil)
                   ("2" (decompose-equality 1) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (= const-decl "[T, T -> boolean]" equalities nil) nil
    (finiteIntersection formula-decl nil set_aux_lemmas nil)
    (AssetName type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (lemmaSetComp formula-decl nil ConfigurationKnowledge nil))
   2477 20 t nil)
  (evalCK_TCC1-3 nil 3499765385 3507398940
   ("" (skolem 1 (ck prod))
    (("" (lemma lemmaSetComp)
      (("" (instantiate -1 (ck prod))
        (("" (replace -1)
          (("" (typepred ck)
            (("" (lemma set_aux_lemmas[CKitem].finiteIntersection)
              ((""
                (instantiate -1
                 ("{i: CKitem | ck(i)}"
                  "{i: CKitem | eval(featExp(i), prod)}"))
                (("1" (propax) nil nil)
                 ("2" (case "ck={i: CKitem | ck(i)}")
                  (("1" (assert) nil nil)
                   ("2" (decompose-equality 1) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((lemmaSetComp formula-decl nil ConfigurationKnowledge nil)
    (Configuration type-eq-decl nil Name nil)
    (Name type-decl nil Name nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName type-decl nil Assets nil)
    (finiteIntersection formula-decl nil set_aux_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   31 10 t nil)
  (evalCK_TCC1-2 nil 3488628265 3499765356
   ("" (skolem 1 (ck prod))
    (("" (lemma lemmaSetComp)
      (("" (instantiate -1 (ck prod))
        (("" (replace -1)
          (("" (typepred "items(ck)")
            (("" (lemma SPGlemmas[CKitem].finiteIntersection)
              ((""
                (instantiate -1
                 ("{i: CKitem | items(ck)(i)}"
                  "{i: CKitem | eval(featExp(i), prod)}"))
                (("1" (propax) nil nil)
                 ("2" (case "items(ck)={i: CKitem | items(ck)(i)}")
                  (("1" (assert) nil nil)
                   ("2" (expand items 1)
                    (("2" (decompose-equality 1) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((lemmaSetComp formula-decl nil ConfigurationKnowledge nil)
    (Configuration type-eq-decl nil Name nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Name type-decl nil Name nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName type-decl nil Assets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil))
   30 10 t nil)
  (evalCK_TCC1-1 nil 3488100214 3488625139
   ("" (skolem 1 (ck prod))
    (("" (lemma lemmaSetComp)
      (("" (instantiate -1 (ck prod))
        (("" (replace -1 1)
          (("" (typepred "items(ck)")
            (("" (lemma finiteintersection)
              ((""
                (instantiate -1
                 ("{i: CKitem | items(ck)(i)}"
                  "{i: CKitem | eval(featExp(i), prod)}"))
                (("1" (propax) nil nil)
                 ("2" (assert) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((lemmaSetComp formula-decl nil ConfigurationKnowledge nil)
    (Configuration type-eq-decl nil Name nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (injective? const-decl "bool" functions nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (is_finite const-decl "bool" finite_sets nil))
   240 200 t nil))
 (assetsCK_TCC1 0
  (assetsCK_TCC1-4 nil 3507401287 3507401290
   ("" (lemma "set_comp_lemmas[Item,AssetName].setCompFinite")
    (("" (instantiate -1 ("LAMBDA(i:Item):assets(i)"))
      (("" (bddsimp)
        (("" (skolem 1 it)
          (("" (typepred "assets(it)") (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((Item type-eq-decl nil ConfigurationKnowledge nil)
    (Formula_ type-decl nil Formula__adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName type-decl nil Assets nil)
    (setCompFinite formula-decl nil set_comp_lemmas nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   2750 10 nil nil)
  (assetsCK_TCC1-3 nil 3507401263 3507401273
   (";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
    (lemma "set_comp_lemmas[CKitem,AssetName].setCompFinite")
    ((";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
      (instantiate -1 ("LAMBDA(i:Item):assets(i)"))
      ((";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
        (bddsimp)
        ((";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
          (skolem 1 it)
          ((";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
            (typepred "assets(it)")
            ((";;; Proof assetsCK_TCC1-2 for formula ConfigurationKnowledge.assetsCK_TCC1"
              (propax) nil))))))))))
    ";;; developed with shostak decision procedures")
   unfinished nil 8899 0 t nil)
  (assetsCK_TCC1-2 nil 3499765408 3507398940
   ("" (lemma "set_comp_lemmas[CKitem,AssetName].setCompFinite")
    (("" (instantiate -1 ("LAMBDA(i:CKitem):assets(i)"))
      (("" (bddsimp)
        (("" (skolem 1 it)
          (("" (typepred "assets(it)") (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((finite_set type-eq-decl nil finite_sets nil)
    (AssetName type-decl nil Assets nil)
    (setCompFinite formula-decl nil set_comp_lemmas nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   2 0 t nil)
  (assetsCK_TCC1-1 nil 3488125377 3499765356
   ("" (lemma "AuxLemmas[CKitem,AssetName].setCompFinite")
    (("" (instantiate -1 ("LAMBDA(i:CKitem):assets(i)"))
      (("" (bddsimp)
        (("" (skolem 1 it)
          (("" (typepred "assets(it)") (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (AssetName type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil))
   3 0 t nil))
 (wfCK_TCC1 0
  (wfCK_TCC1-1 nil 3507398718 3507398940 ("" (subtype-tcc) nil nil)
   unchecked
   ((satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    nil
    (evalCK const-decl "finite_sets[Item].finite_set"
     ConfigurationKnowledge nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set"
     ConfigurationKnowledge nil)
    (member const-decl "bool" sets nil)
    (dom const-decl "set[S]" maps nil)
    (subset? const-decl "bool" sets nil)
    (wfTree const-decl "bool" FeatureModel nil))
   18 10 nil nil))
 (wfCK2_TCC1 0
  (wfCK2_TCC1-1 nil 3507480886 nil ("" (subtype-tcc) nil nil) nil nil
   nil nil nil nil))
 (eqReflexive 0
  (eqReflexive-1 nil 3493467848 3499765356
   ("" (skolem 1 (F A K))
    (("" (expand ckEq) (("" (propax) nil nil)) nil)) nil)
   unchecked ((ckEq const-decl "bool" ConfigurationKnowledge nil)) 25
   10 t shostak))
 (eqSymmetric 0
  (eqSymmetric-1 nil 3493467979 3499765356
   ("" (skolem 1 (F A K1 K2))
    (("" (flatten)
      (("" (expand ckEq)
        (("" (skolem 1 c1)
          (("" (flatten)
            (("" (instantiate -1 c1) (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((Configuration type-eq-decl nil Name nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Name type-decl nil Name nil)
    (ckEq const-decl "bool" ConfigurationKnowledge nil))
   31 10 t shostak))
 (eqTransitive 0
  (eqTransitive-1 nil 3493468010 3499765356
   ("" (skolem 1 (F A K1 K2 K3))
    (("" (expand ckEq)
      (("" (flatten)
        (("" (skolem 1 c1)
          (("" (flatten)
            (("" (instantiate -1 c1)
              (("" (instantiate -2 c1) (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((ckEq const-decl "bool" ConfigurationKnowledge nil)
    (Name type-decl nil Name nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Configuration type-eq-decl nil Name nil))
   10 10 t shostak))
 (ckNames 0
  (ckNames-1 nil 3507480888 3507480899
   ("" (skolem 1 (fm am ck opt))
    (("" (flatten)
      (("" (skolem 2 fe)
        (("" (flatten)
          (("" (expand* wfCK exps member)
            (("" (flatten)
              (("" (instantiate -2 fe)
                (("" (bddsimp)
                  (("" (lemma formNames2)
                    (("" (instantiate -1 (fm fe opt))
                      (("" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((Formula_ type-decl nil Formula__adt nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (formNames2 formula-decl nil FormulaTheory nil)
    (wfCK const-decl "bool" ConfigurationKnowledge nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil))
   11022 20 t shostak)))

