(ConfigurationKnowledge
 (lemmaSetComp 0
  (lemmaSetComp-1 nil 3560771774 3560771783
   ("" (expand intersection)
    (("" (expand member) (("" (propax) nil nil)) nil)) nil)
   proved
   ((member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil))
   8857 10 t shostak))
 (evalCK_TCC1 0
  (evalCK_TCC1-1 nil 3560596453 3560771630
   ("" (skolem 1 (ck c))
    (("" (use lemmaSetComp)
      (("" (replace -1)
        (("" (typepred ck)
          (("" (lemma set_aux_lemmas[Item].finiteIntersection)
            ((""
              (instantiate -1
               ("{i: Item | ck(i)}"
                "{i: Item | satisfies(exp(i), c)}"))
              (("1" (propax) nil nil)
               ("2" (case "ck={i: Item | ck(i)}")
                (("1" (assert) nil nil)
                 ("2" (decompose-equality 1) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((lemmaSetComp formula-decl nil ConfigurationKnowledge nil)
    (Configuration type-eq-decl nil Name nil)
    (Name type-decl nil Name nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (Formula_ type-decl nil Formula__adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ck skolem-const-decl "CK" ConfigurationKnowledge nil)
    (finiteIntersection formula-decl nil set_aux_lemmas nil))
   72886 30 t nil))
 (assetsCK_TCC1 0
  (assetsCK_TCC1-1 nil 3560596453 3560771672
   ("" (lemma "set_comp_lemmas[Item,AssetName].setCompFinite")
    (("" (instantiate -1 ("LAMBDA(i:Item):assets(i)"))
      (("" (bddsimp)
        (("" (skolem 1 it)
          (("" (typepred "assets(it)") (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (setCompFinite formula-decl nil set_comp_lemmas nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil))
   25164 10 t nil))
 (evalUnion 0
  (evalUnion-1 nil 3560771803 3560771906
   ("" (skolem 1 (its s1 s2 c am))
    (("" (expand* union semantics map eval assetsCK evalCK member)
      (("" (flatten)
        (("" (decompose-equality 1)
          (("" (replace -1)
            (("" (assert)
              (("" (bddsimp)
                (("1" (skolem -1 an)
                  (("1" (flatten)
                    (("1" (skolem -1 it)
                      (("1" (flatten)
                        (("1" (instantiate 1 an)
                          (("1" (instantiate 2 an)
                            (("1" (assert)
                              (("1"
                                (instantiate 2 it)
                                (("1"
                                  (instantiate 1 it)
                                  (("1"
                                    (assert)
                                    (("1" (bddsimp) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skolem -1 an)
                  (("2" (flatten)
                    (("2" (instantiate 1 an)
                      (("2" (assert)
                        (("2" (skolem -1 it)
                          (("2" (flatten)
                            (("2" (instantiate 1 it)
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (skolem -1 an)
                  (("3" (flatten)
                    (("3" (skolem -1 it)
                      (("3" (flatten)
                        (("3" (instantiate 1 an)
                          (("3" (assert)
                            (("3" (instantiate 1 it)
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((semantics const-decl "finite_sets[Asset].finite_set"
     ConfigurationKnowledge nil)
    (eval const-decl "finite_sets[AssetName].finite_set"
          ConfigurationKnowledge nil)
    (evalCK const-decl "finite_sets[Item].finite_set"
     ConfigurationKnowledge nil)
    (member const-decl "bool" sets nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set"
     ConfigurationKnowledge nil)
    (map const-decl "finite_sets[T].finite_set" maps nil)
    (union const-decl "set" sets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Asset nonempty-type-decl nil Assets nil)
    (boolean nonempty-type-decl nil booleans nil))
   102678 120 t shostak))
 (wfCK_TCC1 0
  (wfCK_TCC1-1 nil 3560596453 3560771694 ("" (subtype-tcc) nil nil)
   proved
   ((wfTree const-decl "bool" FeatureModel nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil)
    (subset? const-decl "bool" sets nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set"
     ConfigurationKnowledge nil)
    (evalCK const-decl "finite_sets[Item].finite_set"
     ConfigurationKnowledge nil)
    (eval const-decl "finite_sets[AssetName].finite_set"
          ConfigurationKnowledge nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil))
   116 20 t nil))
 (wfCK2_TCC1 0
  (wfCK2_TCC1-1 nil 3560596453 3560771698 ("" (subtype-tcc) nil nil)
   proved
   ((wfTree const-decl "bool" FeatureModel nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil)
    (subset? const-decl "bool" sets nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil))
   159 20 t nil))
 (eqReflexive 0
  (eqReflexive-1 nil 3560771919 3560771921 ("" (grind) nil nil) proved
   ((ckEq const-decl "bool" ConfigurationKnowledge nil)) 1584 10 t
   shostak))
 (eqSymmetric 0
  (eqSymmetric-1 nil 3560771926 3560771929 ("" (grind) nil nil) proved
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Asset nonempty-type-decl nil Assets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (wfCK const-decl "bool" ConfigurationKnowledge nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (Configuration type-eq-decl nil Name nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil)
    (subset? const-decl "bool" sets nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set"
     ConfigurationKnowledge nil)
    (evalCK const-decl "finite_sets[Item].finite_set"
     ConfigurationKnowledge nil)
    (injective? const-decl "bool" functions nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (eval const-decl "finite_sets[AssetName].finite_set"
          ConfigurationKnowledge nil)
    (semantics const-decl "finite_sets[Asset].finite_set"
     ConfigurationKnowledge nil)
    (ckEq const-decl "bool" ConfigurationKnowledge nil))
   2945 1120 t shostak))
 (eqTransitive 0
  (eqTransitive-1 nil 3560771932 3560771936 ("" (grind) nil nil) proved
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Asset nonempty-type-decl nil Assets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (wfCK const-decl "bool" ConfigurationKnowledge nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (Configuration type-eq-decl nil Name nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil)
    (subset? const-decl "bool" sets nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set"
     ConfigurationKnowledge nil)
    (evalCK const-decl "finite_sets[Item].finite_set"
     ConfigurationKnowledge nil)
    (injective? const-decl "bool" functions nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (eval const-decl "finite_sets[AssetName].finite_set"
          ConfigurationKnowledge nil)
    (semantics const-decl "finite_sets[Asset].finite_set"
     ConfigurationKnowledge nil)
    (ckEq const-decl "bool" ConfigurationKnowledge nil))
   4362 2570 t shostak))
 (eqReflexive2 0
  (eqReflexive2-1 nil 3560771946 3560771948 ("" (grind) nil nil) proved
   ((ckEq2 const-decl "bool" ConfigurationKnowledge nil)) 2022 10 t
   shostak))
 (eqSymmetric2 0
  (eqSymmetric2-1 nil 3560771950 3560771951 ("" (grind) nil nil) proved
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (ckEq2 const-decl "bool" ConfigurationKnowledge nil))
   1353 10 t shostak))
 (eqTransitive2 0
  (eqTransitive2-1 nil 3560771954 3560771956 ("" (grind) nil nil)
   proved
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (CK type-eq-decl nil ConfigurationKnowledge nil)
    (ckEq2 const-decl "bool" ConfigurationKnowledge nil))
   1792 10 t shostak))
 (renameCK_TCC1 0
  (renameCK_TCC1-1 nil 3560596453 3560771741
   ("" (lemma "set_comp_lemmas[Item,Name].setCompFinite3")
    (("" (skolem 1 (ck F G))
      ((""
        (instantiate -1
         ("LAMBDA(i:Item,n1:Name,n2:Name):renameCKitem(i,n1,n2)" F G
          ck))
        (("" (propax) nil nil)) nil))
      nil))
    nil)
   proved
   ((CK type-eq-decl nil ConfigurationKnowledge nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (renameCKitem const-decl "Item" ConfigurationKnowledge nil)
    (setCompFinite3 formula-decl nil set_comp_lemmas nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil ConfigurationKnowledge nil)
    (Name type-decl nil Name nil))
   26319 30 t nil))
 (evalEqCK 0
  (evalEqCK-1 nil 3560771972 3560772062
   ("" (skolem 1 (fm1 ck1 F G))
    (("" (flatten)
      (("" (skolem 2 (c fe))
        (("" (flatten)
          (("" (lemma evalRename)
            (("" (expand member)
              (("" (instantiate -1 (F G c fe))
                (("" (assert)
                  (("" (expand* semantics satImpConsts)
                    (("" (flatten)
                      (("" (instantiate -3 G)
                        (("" (assert)
                          (("" (assert) (("" (bddsimp) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((member const-decl "bool" sets nil) (Name type-decl nil Name nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (Formula_ type-decl nil Formula__adt nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (evalRename formula-decl nil FormulaTheory nil))
   89541 60 t shostak))
 (ckNames 0
  (ckNames-1 nil 3560772069 3560772108
   ("" (skolem 1 (fm am ck opt))
    (("" (flatten)
      (("" (skolem 2 fe)
        (("" (flatten)
          (("" (expand* wfCK exps member)
            (("" (flatten)
              (("" (instantiate -2 fe)
                (("" (bddsimp)
                  (("" (lemma formNames2)
                    (("" (instantiate -1 (fm fe opt))
                      (("" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((Formula_ type-decl nil Formula__adt nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (FM type-eq-decl nil FeatureModel nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (formNames2 formula-decl nil FormulaTheory nil)
    (wfCK const-decl "bool" ConfigurationKnowledge nil)
    (exps const-decl "set[Formula_]" ConfigurationKnowledge nil))
   39067 20 t shostak)))

