(FeatureModelSemantics
 (wtFormRefinement 0
  (wtFormRefinement-1 nil 3560709017 3560709042
   ("" (skolem 1 (fm1 fm2))
    (("" (flatten)
      (("" (induct f)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (grind) nil nil) ("4" (grind) nil nil)
         ("5" (grind) nil nil) ("6" (grind) nil nil)
         ("7" (grind) nil nil))
        nil))
      nil))
    nil)
   proved
   ((Formula__induction formula-decl nil Formula__adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (wt def-decl "boolean" FormulaTheory nil)
    (fm2 skolem-const-decl "FM" FeatureModelSemantics nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (fm1 skolem-const-decl "FM" FeatureModelSemantics nil))
   24171 200 t shostak))
 (notMember 0
  (notMember-1 nil 3560709047 3560709075
   ("" (skolem 1 (fm opt))
    (("" (expand* names member semantics satImpConsts satExpConsts)
      (("" (flatten)
        (("" (skolem 2 c1)
          (("" (flatten)
            (("" (instantiate -1 opt) (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (Name type-decl nil Name nil))
   28520 20 t shostak))
 (teste2 0
  (teste2-1 nil 3560709083 3560709484
   ("" (skolem 1 (F G))
    (("" (skolem 1 (c "_"))
      (("" (expand member)
        (("" (induct f)
          (("1" (expand names)
            (("1" (expand satisfies)
              (("1" (expand rename) (("1" (propax) nil nil)) nil))
              nil))
            nil)
           ("2" (expand rename)
            (("2" (expand satisfies) (("2" (propax) nil nil)) nil))
            nil)
           ("3" (skolem 1 nf)
            (("3" (flatten)
              (("3" (expand rename)
                (("3" (expand satisfies)
                  (("3" (expand names)
                    (("3" (case "nf=F")
                      (("1" (assert)
                        (("1" (bddsimp)
                          (("1" (skolem -2 n1)
                            (("1" (bddsimp)
                              (("1"
                                (expand* add remove member)
                                (("1"
                                  (bddsimp)
                                  (("1"
                                    (instantiate 2 G)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (instantiate 2 G)
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (instantiate 3 G)
                                (("2"
                                  (assert)
                                  (("2"
                                    (expand* add remove member)
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (skolem -2 n1)
                              (("2"
                                (expand* add remove member)
                                (("2"
                                  (assert)
                                  (("2"
                                    (bddsimp)
                                    (("1"
                                      (instantiate 2 F)
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (instantiate 2 F)
                                      (("2" (assert) nil nil))
                                      nil)
                                     ("3"
                                      (instantiate 2 F)
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand* add remove member)
                          (("2" (bddsimp)
                            (("1" (skolem -1 n1)
                              (("1"
                                (flatten)
                                (("1"
                                  (bddsimp)
                                  (("1"
                                    (instantiate 3 F)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (instantiate 3 n1)
                                    (("2" (assert) nil nil))
                                    nil)
                                   ("3"
                                    (instantiate 4 n1)
                                    (("3" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skolem -1 n1)
                              (("2"
                                (bddsimp)
                                (("1"
                                  (instantiate 3 n1)
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (instantiate 3 n1)
                                  (("2" (assert) nil nil))
                                  nil)
                                 ("3"
                                  (instantiate 3 n1)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("4" (skolem 1 nf)
            (("4" (flatten)
              (("4" (expand names 1)
                (("4" (assert)
                  (("4" (expand rename 2)
                    (("4" (expand satisfies 2)
                      (("4" (bddsimp) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("5" (skolem 1 (f1 f2))
            (("5" (flatten)
              (("5" (expand names 1)
                (("5" (expand rename 2)
                  (("5" (expand satisfies +) (("5" (bddsimp) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("6" (skolem 1 (f1 f2))
            (("6" (flatten)
              (("6" (expand names +)
                (("6" (expand satisfies +)
                  (("6" (expand rename +) (("6" (bddsimp) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((Formula_ type-decl nil Formula__adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (names def-decl "set[Name]" FormulaTheory nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (remove const-decl "set" sets nil)
    (rename def-decl "Formula_" FormulaTheory nil)
    (Formula__induction formula-decl nil Formula__adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (member const-decl "bool" sets nil))
   400472 240 t shostak))
 (wtFormRename2 0
  (wtFormRename2-1 nil 3560709495 3560709746
   ("" (skolem 1 (fm F G))
    (("" (expand wfTree)
      (("" (induct f)
        (("1" (expand rename)
          (("1" (expand renameFM)
            (("1" (assert)
              (("1" (expand renameFormulae)
                (("1" (expand wt) (("1" (propax) nil nil)) nil)) nil))
              nil))
            nil))
          nil)
         ("2" (expand rename)
          (("2" (expand wt) (("2" (propax) nil nil)) nil)) nil)
         ("3" (skolem 1 nf)
          (("3" (flatten)
            (("3" (expand rename)
              (("3" (expand wt)
                (("3" (skolem -1 n1)
                  (("3" (flatten)
                    (("3" (case "nf=F")
                      (("1" (assert)
                        (("1" (instantiate 1 G)
                          (("1" (expand renameFM)
                            (("1" (expand* add) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (instantiate 2 n1)
                          (("2" (assert)
                            (("2" (expand* renameFM)
                              (("2"
                                (expand* add remove member)
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("4" (skolem 1 nf)
          (("4" (flatten)
            (("4" (expand rename +)
              (("4" (expand wt -2)
                (("4" (assert)
                  (("4" (expand wt 1) (("4" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("5" (skolem 1 (f1 f2))
          (("5" (flatten)
            (("5" (expand wt -3)
              (("5" (flatten)
                (("5" (assert)
                  (("5" (expand rename 1)
                    (("5" (expand wt 1) (("5" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("6" (skolem 1 (f1 f2))
          (("6" (flatten)
            (("6" (expand rename 1)
              (("6" (expand wt (-3 1))
                (("6" (flatten) (("6" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil)
         ("7" (expand wfTree) (("7" (propax) nil nil)) nil)
         ("8" (expand wfTree) (("8" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   proved
   ((wfTree const-decl "bool" FeatureModel nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (add const-decl "(nonempty?)" sets nil)
    (member const-decl "bool" sets nil)
    (remove const-decl "set" sets nil)
    (renameFormulae const-decl "set[Formula_]" FeatureModelSemantics
     nil)
    (Formula__induction formula-decl nil Formula__adt nil)
    (rename def-decl "Formula_" FormulaTheory nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (wt def-decl "boolean" FormulaTheory nil)
    (renameFM const-decl "FM" FeatureModelSemantics nil)
    (F skolem-const-decl "Name" FeatureModelSemantics nil)
    (G skolem-const-decl "Name" FeatureModelSemantics nil)
    (Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (fm skolem-const-decl "WFM" FeatureModelSemantics nil))
   250979 130 t shostak))
 (renameFeature_WF 0
  (renameFeature_WF-1 nil 3559834812 3560709829
   ("" (skolem 1 (fm1 F G))
    (("" (typepred fm1)
      (("" (expand* wfFM wfTree wfFormulae)
        (("" (use wtFormRename2)
          (("" (expand wfTree)
            (("" (skolem 1 form)
              (("" (flatten)
                (("" (expand renameFM -3)
                  (("" (expand renameFormulae -3)
                    (("" (skolem -3 f1)
                      (("" (instantiate -2 f1)
                        (("" (instantiate -1 f1)
                          (("" (flatten) (("" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (set type-eq-decl nil sets nil) (Name type-decl nil Name nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (wtFormRename2 formula-decl nil FeatureModelSemantics nil)
    (renameFM const-decl "FM" FeatureModelSemantics nil)
    (renameFormulae const-decl "set[Formula_]" FeatureModelSemantics
     nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (wfTree const-decl "bool" FeatureModel nil))
   68597 30 t shostak))
 (satFormula3 0
  (satFormula3-1 nil 3560709836 3560709999
   ("" (skolem 1 (fm1 F G))
    (("" (lemma teste2)
      (("" (expand member)
        (("" (flatten)
          (("" (skolem 2 (c form))
            (("" (instantiate -1 (F G c form))
              (("" (flatten)
                (("" (assert)
                  (("" (bddsimp)
                    (("" (expand* semantics satImpConsts)
                      (("" (flatten)
                        (("" (case "c(G)")
                          (("1" (instantiate -2 G)
                            (("1" (assert) nil nil)) nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((teste2 formula-decl nil FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Configuration type-eq-decl nil Name nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Name type-decl nil Name nil) (member const-decl "bool" sets nil))
   163040 180 t shostak))
 (renameFeature3_TCC1 0
  (renameFeature3_TCC1-1 nil 3559395066 3560710352
   ("" (lemma renameFeature_WF)
    (("" (skolem 1 (fm1 F G))
      (("" (instantiate -1 (fm1 F G))
        (("" (flatten)
          (("" (skolem 2 fm2)
            (("" (flatten) (("" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((Name type-decl nil Name nil) (set type-eq-decl nil sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (renameFeature_WF formula-decl nil FeatureModelSemantics nil))
   32933 10 t nil))
 (renameFeature3 0
  (renameFeature3-1 nil 3560710022 3560710306
   ("" (skolem 1 (fm1 F G))
    (("" (expand* refines2 semantics satImpConsts satExpConsts names)
      (("" (flatten)
        (("" (skolem 2 c)
          (("" (flatten)
            ((""
              (instantiate 2 "    IF (c(F)) THEN add(G,remove(F,c))
                ELSE c
                ENDIF")
              (("" (bddsimp)
                (("1" (lemma satFormula3)
                  (("1" (instantiate -1 (fm1 F G))
                    (("1" (assert)
                      (("1" (skolem 2 form)
                        (("1" (flatten)
                          (("1" (expand renameFM -4)
                            (("1" (expand renameFormulae -4)
                              (("1"
                                (typepred fm1)
                                (("1"
                                  (lemma renameFeature_WF)
                                  (("1"
                                    (instantiate -1 (fm1 F G))
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand*
                                         wfFM
                                         wfTree
                                         wfFormulae)
                                        (("1"
                                          (instantiate -1 form)
                                          (("1"
                                            (expand renameFM -1)
                                            (("1"
                                              (expand
                                               renameFormulae
                                               -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (bddsimp -1)
                                                  (("1"
                                                    (skolem -6 f1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (instantiate
                                                         -5
                                                         f1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (instantiate
                                                             -3
                                                             (c f1))
                                                            (("1"
                                                              (expand
                                                               member)
                                                              (("1"
                                                                (instantiate
                                                                 -2
                                                                 f1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     formNames2)
                                                                    (("1"
                                                                      (instantiate
                                                                       -1
                                                                       (fm1
                                                                        f1
                                                                        G))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (bddsimp
                                                                           -3)
                                                                          (("1"
                                                                            (replace
                                                                             -7)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (reveal
                                                                             -4)
                                                                            (("2"
                                                                              (expand*
                                                                               semantics
                                                                               satImpConsts
                                                                               satExpConsts)
                                                                              (("2"
                                                                                (bddsimp)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skolem 2 name)
                  (("2" (flatten)
                    (("2" (expand renameFM +)
                      (("2" (expand* add remove member)
                        (("2" (bddsimp)
                          (("1" (assert)
                            (("1" (flatten)
                              (("1"
                                (instantiate -1 name)
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (refines2 const-decl "bool" FeatureModelSemantics nil)
    (satFormula3 formula-decl nil FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (renameFormulae const-decl "set[Formula_]" FeatureModelSemantics
     nil)
    (renameFeature_WF formula-decl nil FeatureModelSemantics nil)
    (member const-decl "bool" sets nil)
    (formNames2 formula-decl nil FormulaTheory nil)
    (wfFormulae const-decl "boolean" FormulaTheory nil)
    (wfTree const-decl "bool" FeatureModel nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (renameFM const-decl "FM" FeatureModelSemantics nil)
    (Name type-decl nil Name nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (set type-eq-decl nil sets nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (remove const-decl "set" sets nil))
   283425 180 t shostak)))

