(Templates
 (removeFeatureGuydance 0
  (removeFeatureGuydance-2 nil 3729493680
   ("" (lemma replacePreservesWf)
    (("" (lemma replaceRemoveSemantics)
      (("" (skolem 1 (pl am2 fm2 f0))
        (("" (expand prod)
          (("" (bddsimp)
            (("" (skolem 1 c)
              (("" (bddsimp)
                ((""
                  (case "semantics(K(pl))(A(pl))(c) = semantics(replace(K(pl), f0, FALSE_FORMULA))(am2)(c)")
                  (("1" (replace -1 1)
                    (("1" (use SPLrefinement.assetRefinement)
                      (("1" (expand preorder?)
                        (("1" (flatten)
                          (("1" (expand reflexive?)
                            (("1"
                              (inst -1
                               "semantics(replace(K(pl), f0, FALSE_FORMULA))(am2)(c)")
                              nil)))))))))))
                   ("2" (expand "<>")
                    (("2" (flatten)
                      (("2" (expand satisfies)
                        (("2" (expand satisfies)
                          (("2" (inst 2 f0)
                            (("2"
                              (inst -1 c "A(pl)" "K(pl)" f0
                               "FALSE_FORMULA")
                              (("2"
                                (bddsimp)
                                (("2"
                                  (replace -1 3)
                                  (("2"
                                    (hide 3)
                                    (("2"
                                      (replace -1 1)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (name
                                           "k"
                                           "replace(K(pl), f0, FALSE_FORMULA)")
                                          (("2"
                                            (replace -1 1)
                                            (("2"
                                              (expand semantics)
                                              (("2"
                                                (expand map)
                                                (("2"
                                                  (decompose-equality
                                                   1)
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (skolem -1 an)
                                                      (("1"
                                                        (inst 1 an)
                                                        (("1"
                                                          (bddsimp)
                                                          (("1"
                                                            (expand
                                                             subset?)
                                                            (("1"
                                                              (inst
                                                               -5
                                                               "(an, x!1)")
                                                              (("1"
                                                                (expand
                                                                 member)
                                                                (("1"
                                                                  (bddsimp)
                                                                  nil)))))))))))))
                                                     ("2"
                                                      (skolem -1 an)
                                                      (("2"
                                                        (inst 1 an)
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst
                                                             -4
                                                             "A(pl)"
                                                             "K(pl)"
                                                             f0)
                                                            (("2"
                                                              (bddsimp)
                                                              (("2"
                                                                (replace
                                                                 -3
                                                                 -5)
                                                                (("2"
                                                                  (expand
                                                                   assetsInCK
                                                                   -5)
                                                                  (("2"
                                                                    (expand
                                                                     eval
                                                                     -1)
                                                                    (("2"
                                                                      (expand
                                                                       assetsCK
                                                                       -1)
                                                                      (("2"
                                                                        (skolem
                                                                         -1
                                                                         i)
                                                                        (("2"
                                                                          (bddsimp)
                                                                          (("2"
                                                                            (expand
                                                                             evalCK)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -7
                                                                                 i)
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (expand
                                                                                     subset?
                                                                                     -7)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -7
                                                                                       an)
                                                                                      (("2"
                                                                                        (expand
                                                                                         member)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             dom)
                                                                                            (("2"
                                                                                              (skolem
                                                                                               -7
                                                                                               a)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 subset?)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "(an, a)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     member)
                                                                                                    (("2"
                                                                                                      (bddsimp)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         am2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unique)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             an
                                                                                                             "x!1"
                                                                                                             a)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -4
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (removeFeatureGuydance-1 nil 3711745991
   ("" (lemma replacePreservesWf)
    (("" (lemma replaceRemoveSemantics)
      (("" (skolem 1 (pl am2 fm2 f0))
        (("" (expand prod)
          (("" (bddsimp)
            (("" (skolem 1 c)
              (("" (bddsimp)
                ((""
                  (case "semantics(K(pl))(A(pl))(c) = semantics(replace(K(pl), f0, FALSE_FORMULA))(am2)(c)")
                  (("1" (replace -1 1)
                    (("1" (use SPLrefinement.assetRefinement)
                      (("1" (expand preorder?)
                        (("1" (flatten)
                          (("1" (expand reflexive?)
                            (("1"
                              (inst -1
                               "semantics(replace(K(pl), f0, FALSE_FORMULA))(am2)(c)")
                              nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "<>")
                    (("2" (flatten)
                      (("2" (expand satisfies)
                        (("2" (expand satisfies)
                          (("2" (inst 2 f0)
                            (("2" (inst -1 c "A(pl)" "K(pl)" f0)
                              (("2"
                                (bddsimp)
                                (("2"
                                  (replace -1 3)
                                  (("2"
                                    (hide 3)
                                    (("2"
                                      (replace -1 1)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (name
                                           "k"
                                           "replace(K(pl), f0, FALSE_FORMULA)")
                                          (("2"
                                            (replace -1 1)
                                            (("2"
                                              (expand semantics)
                                              (("2"
                                                (expand map)
                                                (("2"
                                                  (decompose-equality
                                                   1)
                                                  (("2"
                                                    (bddsimp)
                                                    (("1"
                                                      (skolem -1 an)
                                                      (("1"
                                                        (inst 1 an)
                                                        (("1"
                                                          (bddsimp)
                                                          (("1"
                                                            (expand
                                                             subset?)
                                                            (("1"
                                                              (inst
                                                               -5
                                                               "(an, x!1)")
                                                              (("1"
                                                                (expand
                                                                 member)
                                                                (("1"
                                                                  (bddsimp)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skolem -1 an)
                                                      (("2"
                                                        (inst 1 an)
                                                        (("2"
                                                          (bddsimp)
                                                          (("2"
                                                            (inst
                                                             -4
                                                             "A(pl)"
                                                             "K(pl)"
                                                             f0)
                                                            (("2"
                                                              (bddsimp)
                                                              (("2"
                                                                (replace
                                                                 -3
                                                                 -5)
                                                                (("2"
                                                                  (expand
                                                                   assetsInCK
                                                                   -5)
                                                                  (("2"
                                                                    (expand
                                                                     eval
                                                                     -1)
                                                                    (("2"
                                                                      (expand
                                                                       assetsCK
                                                                       -1)
                                                                      (("2"
                                                                        (skolem
                                                                         -1
                                                                         i)
                                                                        (("2"
                                                                          (bddsimp)
                                                                          (("2"
                                                                            (expand
                                                                             evalCK)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -7
                                                                                 i)
                                                                                (("2"
                                                                                  (bddsimp)
                                                                                  (("2"
                                                                                    (expand
                                                                                     subset?
                                                                                     -7)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -7
                                                                                       an)
                                                                                      (("2"
                                                                                        (expand
                                                                                         member)
                                                                                        (("2"
                                                                                          (bddsimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             dom)
                                                                                            (("2"
                                                                                              (skolem
                                                                                               -7
                                                                                               a)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 subset?)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -8
                                                                                                   "(an, a)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     member)
                                                                                                    (("2"
                                                                                                      (bddsimp)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         am2)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           unique)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             an
                                                                                                             "x!1"
                                                                                                             a)
                                                                                                            (("2"
                                                                                                              (bddsimp)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -4
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((replaceRemoveSemantics formula-decl nil MappingOperator nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (FALSE_FORMULA adt-constructor-decl "(FALSE?)" Formula__adt nil)
    (FALSE? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (replace const-decl "CKComp.CK" MappingOperator nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (restrict const-decl "R" restrict nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (semantics const-decl "finite_sets[Asset].finite_set" CKComp nil)
    (Configuration type-eq-decl nil Name nil)
    (Name type-decl nil Name nil)
    (AM type-eq-decl nil AssetMapping nil)
    (unique const-decl "bool" maps nil)
    (CK type-eq-decl nil CKComp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Item type-eq-decl nil CKComp nil)
    (Formula_ type-decl nil Formula__adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset nonempty-type-decl nil Assets nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (eval const-decl "finite_sets[AssetName].finite_set" CKComp nil)
    (assetsInCK const-decl "bool" CKComp nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set" CKComp
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dom const-decl "set[S]" maps nil)
    (evalCK const-decl "finite_sets[Item].finite_set" CKComp nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (map const-decl "finite_sets[T].finite_set" maps nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (replacePreservesWf formula-decl nil MappingOperator nil))
   shostak))
 (completenessRemove 0
  (completenessRemove-1 nil 3711746160
   ("" (skolem 1 (fm f0))
    (("" (bddsimp)
      (("1" (grind)
        (("1" (expand "<>")
          (("1" (decompose-equality) (("1" (bddsimp) nil nil)) nil))
          nil))
        nil)
       ("2" (expand "<>")
        (("2" (decompose-equality)
          (("2" (bddsimp)
            (("1" (expand union)
              (("1" (expand member)
                (("1" (bddsimp) (("1" (grind) nil nil)) nil)) nil))
              nil)
             ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Name type-decl nil Name nil)
    (boolean nonempty-type-decl nil booleans nil)
    (emptyset const-decl "set" sets nil)
    (NOT_FORMULA adt-constructor-decl "[Formula_ -> (NOT?)]"
     Formula__adt nil)
    (NOT? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt nil)
    (NAME_FORMULA adt-constructor-decl "[Name -> (NAME?)]" Formula__adt
     nil)
    (NAME? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (wfConfigurations const-decl "set[Configuration]"
     FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Formula_ type-decl nil Formula__adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (intersection const-decl "set" sets nil)
    (set type-eq-decl nil sets nil)
    (Configuration type-eq-decl nil Name nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (member const-decl "bool" sets nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil))
   shostak))
 (mergeFeatureGuydanceNonePresent 0
  (mergeFeatureGuydanceNonePresent-1 nil 3711746212
   ("" (skolem 1 (pl am2 fm2 f0 f1))
    (("" (expand prod)
      (("" (bddsimp)
        (("" (skolem 1 c)
          (("" (bddsimp)
            (("" (lemma replacePreservesWf)
              (("" (inst -1 "A(pl)" "K(pl)" f0 "NAME_FORMULA(f1)")
                (("" (bddsimp)
                  (("" (lemma replaceMergeSemanticsNonePresent)
                    (("" (expand "<>")
                      ((""
                        (case "semantics(K(pl))(A(pl))(c) = semantics(replace(K(pl), f0, NAME_FORMULA(f1)))(am2)(c)")
                        (("1" (replace -1 1)
                          (("1" (use SPLrefinement.assetRefinement)
                            (("1" (expand preorder?)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand reflexive?)
                                  (("1"
                                    (inst
                                     -1
                                     "semantics(replace(K(pl), f0, NAME_FORMULA(f1)))(am2)(c)")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (expand satisfies)
                            (("2" (flatten)
                              (("2"
                                (expand wfConfigurations)
                                (("2"
                                  (expand satisfies)
                                  (("2"
                                    (expand satisfies)
                                    (("2"
                                      (inst 2 f0)
                                      (("2"
                                        (inst 3 f1)
                                        (("2"
                                          (inst
                                           -1
                                           c
                                           "A(pl)"
                                           "K(pl)"
                                           f0
                                           f1)
                                          (("2"
                                            (bddsimp)
                                            (("2"
                                              (replace -1 1)
                                              (("2"
                                                (name
                                                 "k"
                                                 "replace(K(pl), f0, NAME_FORMULA(f1))")
                                                (("2"
                                                  (replace -1 1)
                                                  (("2"
                                                    (expand
                                                     semantics
                                                     1)
                                                    (("2"
                                                      (expand map)
                                                      (("2"
                                                        (decompose-equality
                                                         1)
                                                        (("2"
                                                          (bddsimp)
                                                          (("1"
                                                            (skolem
                                                             -1
                                                             an)
                                                            (("1"
                                                              (replace
                                                               -2
                                                               -5)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 an)
                                                                (("1"
                                                                  (bddsimp)
                                                                  (("1"
                                                                    (expand
                                                                     assetsInCK)
                                                                    (("1"
                                                                      (expand
                                                                       eval)
                                                                      (("1"
                                                                        (expand
                                                                         assetsCK)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           item)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               evalCK)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -8
                                                                                   item)
                                                                                  (("1"
                                                                                    (bddsimp)
                                                                                    (("1"
                                                                                      (expand
                                                                                       subset?
                                                                                       -8)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -8
                                                                                         an)
                                                                                        (("1"
                                                                                          (expand
                                                                                           member)
                                                                                          (("1"
                                                                                            (bddsimp)
                                                                                            (("1"
                                                                                              (expand
                                                                                               dom)
                                                                                              (("1"
                                                                                                (skolem
                                                                                                 -8
                                                                                                 asset)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   subset?)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -9
                                                                                                     "(an, asset)")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       member)
                                                                                                      (("1"
                                                                                                        (bddsimp)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "A(pl)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             unique)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               an
                                                                                                               "x!1"
                                                                                                               asset)
                                                                                                              (("1"
                                                                                                                (bddsimp)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -4
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skolem
                                                             -1
                                                             an)
                                                            (("2"
                                                              (inst
                                                               1
                                                               an)
                                                              (("2"
                                                                (bddsimp)
                                                                (("2"
                                                                  (expand
                                                                   eval)
                                                                  (("2"
                                                                    (expand
                                                                     assetsCK)
                                                                    (("2"
                                                                      (skolem
                                                                       -1
                                                                       item)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           evalCK)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               assetsInCK)
                                                                              (("2"
                                                                                (replace
                                                                                 -5
                                                                                 -8)
                                                                                (("2"
                                                                                  (inst
                                                                                   -8
                                                                                   item)
                                                                                  (("2"
                                                                                    (bddsimp)
                                                                                    (("2"
                                                                                      (expand
                                                                                       subset?)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -8
                                                                                         an)
                                                                                        (("2"
                                                                                          (expand
                                                                                           member)
                                                                                          (("2"
                                                                                            (bddsimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               dom)
                                                                                              (("2"
                                                                                                (skolem
                                                                                                 -8
                                                                                                 a2)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -9
                                                                                                   "(an, a2)")
                                                                                                  (("2"
                                                                                                    (bddsimp)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       am2)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         unique)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -2
                                                                                                           an
                                                                                                           a2
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (bddsimp)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               1
                                                                                                               RL)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((AssetName nonempty-type-decl nil Assets nil)
    (Asset nonempty-type-decl nil Assets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (Item type-eq-decl nil CKComp nil) (CK type-eq-decl nil CKComp nil)
    (restrict const-decl "R" restrict nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (semantics const-decl "finite_sets[Asset].finite_set" CKComp nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (NAME? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (NAME_FORMULA adt-constructor-decl "[Name -> (NAME?)]" Formula__adt
     nil)
    (replaceMergeSemanticsNonePresent formula-decl nil MappingOperator
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (replace const-decl "CKComp.CK" MappingOperator nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (wfConfigurations const-decl "set[Configuration]"
     FeatureModelSemantics nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (eval const-decl "finite_sets[AssetName].finite_set" CKComp nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (assetsInCK const-decl "bool" CKComp nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set" CKComp
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (evalCK const-decl "finite_sets[Item].finite_set" CKComp nil)
    (map const-decl "finite_sets[T].finite_set" maps nil) nil
    (replacePreservesWf formula-decl nil MappingOperator nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement
     nil))
   shostak))
 (mergeFeatureGuydanceBothPresent 0
  (mergeFeatureGuydanceBothPresent-1 nil 3711746341
   ("" (skolem 1 (pl am2 fm2 f0 f1))
    (("" (lemma replacePreservesWf)
      (("" (lemma replaceMergeSemanticsBothPresent)
        (("" (expand prod)
          (("" (bddsimp)
            (("" (skolem 2 c)
              (("" (bddsimp)
                (("" (expand "<>")
                  (("" (flatten)
                    (("" (expand satisfies)
                      (("" (flatten)
                        (("" (expand satisfies)
                          (("" (skolem -10 f2)
                            (("" (skolem -11 f3)
                              ((""
                                (bddsimp)
                                ((""
                                  (replace -11 -10)
                                  ((""
                                    (replace -13 -12)
                                    ((""
                                      (hide -11)
                                      ((""
                                        (hide -12)
                                        ((""
                                          (case
                                           "semantics(K(pl))(A(pl))(c) = semantics(replace(K(pl), f0, NAME_FORMULA(f1)))(am2)
                       (remove(f0, c))")
                                          (("1"
                                            (replace -1 2)
                                            (("1"
                                              (use
                                               SPLrefinement.assetRefinement)
                                              (("1"
                                                (expand preorder?)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand reflexive?)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "semantics(replace(K(pl), f0, NAME_FORMULA(f1)))(am2)
                       (remove(f0, c))")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 3)
                                            (("2"
                                              (inst
                                               -1
                                               c
                                               "A(pl)"
                                               "K(pl)"
                                               f0
                                               f1)
                                              (("2"
                                                (bddsimp)
                                                (("2"
                                                  (replace -3 1)
                                                  (("2"
                                                    (name
                                                     "k"
                                                     "replace(K(pl), f0, NAME_FORMULA(f1))")
                                                    (("2"
                                                      (replace -1 1)
                                                      (("2"
                                                        (name
                                                         "c2"
                                                         "remove(f0,c)")
                                                        (("2"
                                                          (replace
                                                           -1
                                                           1)
                                                          (("2"
                                                            (inst
                                                             -6
                                                             "A(pl)"
                                                             "K(pl)"
                                                             f0
                                                             "NAME_FORMULA(f1)")
                                                            (("2"
                                                              (bddsimp)
                                                              (("2"
                                                                (expand
                                                                 semantics)
                                                                (("2"
                                                                  (expand
                                                                   map)
                                                                  (("2"
                                                                    (decompose-equality
                                                                     1)
                                                                    (("2"
                                                                      (bddsimp)
                                                                      (("1"
                                                                        (skolem
                                                                         -1
                                                                         an)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             assetsInCK)
                                                                            (("1"
                                                                              (expand
                                                                               eval)
                                                                              (("1"
                                                                                (expand
                                                                                 assetsCK)
                                                                                (("1"
                                                                                  (skolem
                                                                                   -1
                                                                                   item)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       evalCK)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -6
                                                                                           -11)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -11
                                                                                             item)
                                                                                            (("1"
                                                                                              (bddsimp)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 subset?)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -11
                                                                                                   an)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     member)
                                                                                                    (("1"
                                                                                                      (bddsimp)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         dom)
                                                                                                        (("1"
                                                                                                          (skolem
                                                                                                           -11
                                                                                                           a)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -12
                                                                                                             "(an, a)")
                                                                                                            (("1"
                                                                                                              (bddsimp)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 an)
                                                                                                                (("1"
                                                                                                                  (bddsimp)
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "A(pl)")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       unique)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         an
                                                                                                                         a
                                                                                                                         "x!1")
                                                                                                                        (("1"
                                                                                                                          (bddsimp)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -4
                                                                                                                             1
                                                                                                                             RL)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     item)
                                                                                                                    (("2"
                                                                                                                      (bddsimp)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skolem
                                                                         -1
                                                                         an)
                                                                        (("2"
                                                                          (inst
                                                                           1
                                                                           an)
                                                                          (("2"
                                                                            (bddsimp)
                                                                            (("2"
                                                                              (expand
                                                                               assetsInCK)
                                                                              (("2"
                                                                                (expand
                                                                                 eval)
                                                                                (("2"
                                                                                  (expand
                                                                                   assetsCK)
                                                                                  (("2"
                                                                                    (skolem
                                                                                     -1
                                                                                     item)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (expand
                                                                                         evalCK)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -6
                                                                                             -11)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -11
                                                                                               item)
                                                                                              (("2"
                                                                                                (bddsimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   subset?
                                                                                                   -11)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -11
                                                                                                     an)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       member)
                                                                                                      (("2"
                                                                                                        (bddsimp)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           dom)
                                                                                                          (("2"
                                                                                                            (skolem
                                                                                                             -11
                                                                                                             a)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               subset?)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -12
                                                                                                                 "(an, a)")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   member)
                                                                                                                  (("2"
                                                                                                                    (bddsimp)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       am2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         unique)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           an
                                                                                                                           a
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (bddsimp)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -4
                                                                                                                               1
                                                                                                                               RL)
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((replacePreservesWf formula-decl nil MappingOperator nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (<> const-decl "set[Configuration]" FeatureModelSemantics nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (remove const-decl "set" sets nil)
    (NAME_FORMULA adt-constructor-decl "[Name -> (NAME?)]" Formula__adt
     nil)
    (NAME? adt-recognizer-decl "[Formula_ -> boolean]" Formula__adt
     nil)
    (replace const-decl "CKComp.CK" MappingOperator nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (restrict const-decl "R" restrict nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (FM type-eq-decl nil FeatureModel nil)
    (semantics const-decl "finite_sets[Asset].finite_set" CKComp nil)
    (Configuration type-eq-decl nil Name nil)
    (Name type-decl nil Name nil)
    (AM type-eq-decl nil AssetMapping nil)
    (unique const-decl "bool" maps nil)
    (CK type-eq-decl nil CKComp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Item type-eq-decl nil CKComp nil)
    (Formula_ type-decl nil Formula__adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset nonempty-type-decl nil Assets nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (reflexive? const-decl "bool" relations nil)
    (preorder? const-decl "bool" orders nil)
    (map const-decl "finite_sets[T].finite_set" maps nil)
    (evalCK const-decl "finite_sets[Item].finite_set" CKComp nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dom const-decl "set[S]" maps nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set" CKComp
     nil)
    (assetsInCK const-decl "bool" CKComp nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (eval const-decl "finite_sets[AssetName].finite_set" CKComp nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (replaceMergeSemanticsBothPresent formula-decl nil MappingOperator
     nil))
   shostak))
 (completenessMerge 0
  (completenessMerge-1 nil 3711746518
   ("" (skolem 1 (f0 f1 fm))
    (("" (skolem 1 (form1 form2))
      (("" (bddsimp)
        (("" (expand mergeFormulas)
          (("" (expand intersection)
            (("" (bddsimp)
              (("1" (grind) nil nil)
               ("2" (decompose-equality 2)
                (("2" (expand member)
                  (("2" (bddsimp)
                    (("1" (grind) nil nil) ("2" (grind) nil nil)
                     ("3" (grind) nil nil))
                    nil))
                  nil))
                nil)
               ("3" (decompose-equality 2)
                (("3" (expand member) (("3" (grind) nil nil)) nil))
                nil)
               ("4" (decompose-equality 2)
                (("4" (expand member) (("4" (grind) nil nil)) nil))
                nil)
               ("5" (decompose-equality 2)
                (("5" (expand member) (("5" (grind) nil nil)) nil))
                nil)
               ("6" (decompose-equality 2) nil nil)
               ("7" (expand member)
                (("7" (decompose-equality 2) (("7" (grind) nil nil))
                  nil))
                nil)
               ("8" (decompose-equality 2)
                (("8" (expand member) (("8" (grind) nil nil)) nil))
                nil)
               ("9" (decompose-equality 2)
                (("9" (expand member) (("9" (grind) nil nil)) nil))
                nil)
               ("10" (decompose-equality 2)
                (("10" (expand member) (("10" (grind) nil nil)) nil))
                nil)
               ("11" (decompose-equality 2) nil nil)
               ("12" (expand member)
                (("12" (decompose-equality 2) (("12" (grind) nil nil))
                  nil))
                nil)
               ("13" (decompose-equality 2)
                (("13" (expand member) (("13" (grind) nil nil)) nil))
                nil)
               ("14" (decompose-equality 2)
                (("14" (expand member) (("14" (grind) nil nil)) nil))
                nil)
               ("15" (decompose-equality 2)
                (("15" (expand member) (("15" (grind) nil nil)) nil))
                nil)
               ("16" (decompose-equality 2) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((intersection const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil) (member const-decl "bool" sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (emptyset const-decl "set" sets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Name type-decl nil Name nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (mergeFormulas const-decl "set[Formula_]" Templates nil))
   shostak))
 (extractFeatureGuidanceNonePresent 0
  (extractFeatureGuidanceNonePresent-1 nil 3711746817
   ("" (skolem 1 (pl fm2 f0 f1))
    (("" (expand prod)
      (("" (bddsimp)
        (("" (skolem 2 c)
          (("" (bddsimp)
            ((""
              (case "semantics(K(pl))(A(pl))(c) = semantics(replaceMultiple(K(pl), f0, f1))(A(pl))(c)")
              (("1" (replace -1 2)
                (("1" (lemma SPLrefinement.assetRefinement)
                  (("1" (expand preorder?)
                    (("1" (flatten)
                      (("1" (expand reflexive?)
                        (("1"
                          (inst -1
                           "semantics(replaceMultiple(K(pl), f0, f1))(A(pl))(c)")
                          nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 3)
                (("2" (lemma replaceExtractNonePresent)
                  (("2" (expand "<>")
                    (("2" (flatten)
                      (("2" (expand satisfies)
                        (("2" (expand satisfies)
                          (("2" (inst 3 f0)
                            (("2" (lemma notMember2)
                              (("2"
                                (inst -1 "F(pl)" f1)
                                (("2"
                                  (bddsimp)
                                  (("2"
                                    (inst -1 c)
                                    (("2"
                                      (bddsimp)
                                      (("2"
                                        (inst
                                         -2
                                         c
                                         "A(pl)"
                                         "K(pl)"
                                         f0
                                         f1)
                                        (("2" (bddsimp) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((satisfies def-decl "boolean" FormulaTheory nil)
    (notMember2 formula-decl nil FeatureModelSemantics nil)
    (replaceExtractNonePresent formula-decl nil MappingOperator nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (Asset nonempty-type-decl nil Assets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Item type-eq-decl nil CKComp nil)
    (is_finite const-decl "bool" finite_sets nil)
    (CK type-eq-decl nil CKComp nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (semantics const-decl "finite_sets[Asset].finite_set" CKComp nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (restrict const-decl "R" restrict nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (replaceMultiple const-decl "CKComp.CK" MappingOperator nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement
     nil))
   shostak))
 (extractFeatureGuidanceBothPresent 0
  (extractFeatureGuidanceBothPresent-1 nil 3711747056
   ("" (lemma replaceExtractBothPresent)
    (("" (skolem 1 (pl fm2 f0 f1))
      (("" (expand prod)
        (("" (bddsimp)
          (("" (skolem 2 c)
            (("" (bddsimp)
              (("" (expand "<>")
                (("" (flatten)
                  (("" (expand satisfies)
                    (("" (skolem -7 f2)
                      (("" (flatten)
                        (("" (replace -8 -7)
                          (("" (inst -1 c "A(pl)" "K(pl)" f0 f1)
                            (("" (bddsimp)
                              ((""
                                (replace -3 2)
                                ((""
                                  (lemma SPLrefinement.assetRefinement)
                                  ((""
                                    (expand preorder?)
                                    ((""
                                      (flatten)
                                      ((""
                                        (expand reflexive?)
                                        (("" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((replaceExtractBothPresent formula-decl nil MappingOperator nil)
    (prod const-decl "finite_sets[Asset].finite_set" SPLrefinement nil)
    (satisfies def-decl "boolean" FormulaTheory nil)
    (Name type-decl nil Name nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Configuration type-eq-decl nil Name nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Asset nonempty-type-decl nil Assets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Formula_ type-decl nil Formula__adt nil)
    (FM type-eq-decl nil FeatureModel nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (Item type-eq-decl nil CKComp nil) (CK type-eq-decl nil CKComp nil)
    (restrict const-decl "R" restrict nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (semantics const-decl "finite_sets[Asset].finite_set" CKComp nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (add const-decl "(nonempty?)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (replaceMultiple const-decl "CKComp.CK" MappingOperator nil)
    (evalCK const-decl "finite_sets[Item].finite_set" CKComp nil)
    (assetsCK const-decl "finite_sets[AssetName].finite_set" CKComp
     nil)
    (map const-decl "finite_sets[T].finite_set" maps nil)
    (mapping type-eq-decl nil maps nil)
    (union const-decl "set" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil)
    (satExpConsts const-decl "bool" FeatureModelSemantics nil)
    (satImpConsts const-decl "bool" FeatureModelSemantics nil)
    (eval const-decl "finite_sets[AssetName].finite_set" CKComp nil)
    (transitive? const-decl "bool" relations nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set" finite_sets nil)
    (assetRefinement formula-decl nil SPLrefinement nil))
   shostak)))

