(PartialAMRefInstTrans
 (eval_preserv_TCC1 0
  (eval_preserv_TCC1-1 nil 3675377348
   ("" (lemma ckPreserves) (("" (propax) nil nil)) nil)
   ((ckPreserves formula-decl nil CKmultiple nil)) nil))
 (eval_TCC1 0
  (eval_TCC1-1 nil 3675377348 ("" (subtype-tcc) nil nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (unique const-decl "bool" maps nil)
    (emptyset const-decl "set" sets nil))
   nil))
 (IMP_PartialAMCompositionality_unusedAssets_TCC1 0
  (IMP_PartialAMCompositionality_unusedAssets_TCC1-1 nil 3686494416
   ("" (skolem 1 (am ck anSet c))
    (("" (bddsimp)
      (("" (lemma unusedAssets)
        (("" (inst -1 ck am c emptyset anSet)
          (("1" (bddsimp)
            (("1" (expand "[||]")
              (("1" (expand eval)
                (("1" (replace -1 1) (("1" (propax) nil nil)) nil))
                nil))
              nil)
             ("2" (expand subset?)
              (("2" (skolem 1 an)
                (("2" (expand "[||]")
                  (("2" (expand member)
                    (("2" (bddsimp)
                      (("2" (inst -2 an)
                        (("2" (expand eval -2)
                          (("2" (expand domain)
                            (("2" (bddsimp) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand unique)
            (("2" (skolem 1 (an r1 r2))
              (("2" (expand emptyset) (("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset nonempty-type-decl nil Assets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Transformations type-decl nil CKmultiple nil)
    (list type-decl nil list_adt nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (FM type-eq-decl nil FeatureModel nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (eval const-decl "AM" PartialAMRefInstTrans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (ckevaluation const-decl "AM" CKmultiple nil)
    (wfCK const-decl "bool" CKtrans nil)
    (subset? const-decl "bool" sets nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (member const-decl "bool" sets nil)
    ([\|\|] const-decl "finite_sets[Asset].finite_set"
     PartialAMCompositionality nil)
    (unusedAssets formula-decl nil CKmultiple nil))
   nil))
 (IMP_PartialAMCompositionality_evalPreservesDom_TCC1 0
  (IMP_PartialAMCompositionality_evalPreservesDom_TCC1-1 nil 3686494416
   ("" (skolem 1 (am ck c))
    (("" (lemma domainPreserved)
      (("" (inst -1 ck am c emptyset)
        (("1" (expand subset?)
          (("1" (skolem 1 an)
            (("1" (expand member)
              (("1" (bddsimp)
                (("1" (inst -1 an)
                  (("1" (expand dom)
                    (("1" (expand domain)
                      (("1" (expand eval)
                        (("1" (bddsimp)
                          (("1" (skolem -1 a)
                            (("1" (expand union)
                              (("1"
                                (expand member)
                                (("1"
                                  (bddsimp)
                                  (("1"
                                    (skolem -2 a2)
                                    (("1"
                                      (expand emptyset)
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand emptyset)
          (("2" (expand unique) (("2" (propax) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((domainPreserved formula-decl nil CKmultiple nil)
    (subset? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (union const-decl "set" sets nil)
    (dom const-decl "set[S]" maps nil)
    (wfCK const-decl "bool" CKtrans nil)
    (ckevaluation const-decl "AM" CKmultiple nil)
    (extend const-decl "R" extend nil)
    (FALSE const-decl "bool" booleans nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (eval const-decl "AM" PartialAMRefInstTrans nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (FM type-eq-decl nil FeatureModel nil)
    (Configuration type-eq-decl nil Name nil)
    (Name type-decl nil Name nil)
    (AM type-eq-decl nil AssetMapping nil)
    (list type-decl nil list_adt nil)
    (Transformations type-decl nil CKmultiple nil)
    (Formula_ type-decl nil Formula__adt nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Asset nonempty-type-decl nil Assets nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (IMP_PartialAMCompositionality_sameDomSameEvalResult_TCC1 0
  (IMP_PartialAMCompositionality_sameDomSameEvalResult_TCC1-1 nil
   3686494416
   ("" (lemma sameAmSameDom)
    (("" (skolem 1 (am am2 ck c))
      (("" (bddsimp)
        (("" (inst -1 ck am am2 emptyset c)
          (("1" (bddsimp)
            (("1" (expand eval) (("1" (propax) nil nil)) nil)) nil)
           ("2" (expand unique)
            (("2" (expand emptyset) (("2" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (unique const-decl "bool" maps nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Asset nonempty-type-decl nil Assets nil)
    (AssetName nonempty-type-decl nil Assets nil)
    (Formula_ type-decl nil Formula__adt nil)
    (Transformations type-decl nil CKmultiple nil)
    (list type-decl nil list_adt nil)
    (AM type-eq-decl nil AssetMapping nil)
    (Name type-decl nil Name nil)
    (Configuration type-eq-decl nil Name nil)
    (FM type-eq-decl nil FeatureModel nil)
    (semantics const-decl "set[Configuration]" FeatureModelSemantics
     nil)
    (eval const-decl "AM" PartialAMRefInstTrans nil)
    (wfFM const-decl "bool" FeatureModelSemantics nil)
    (WFM type-eq-decl nil FeatureModelSemantics nil)
    (AM type-eq-decl nil PartialAMCompositionality nil)
    (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (ckevaluation const-decl "AM" CKmultiple nil)
    (wfCK const-decl "bool" CKtrans nil)
    (sameAmSameDom formula-decl nil CKmultiple nil))
   nil)))

