(SPLPartialRefinementCommon
 (fmPartRef_TCC1 0
  (fmPartRef_TCC1-1 nil 3659523878
   ("" (lemma finite_semantics)
    (("" (skolem 1 (fm1 fm2)) (("" (inst -1 fm1) nil nil)) nil)) nil)
   ((finite_semantics formula-decl nil SPLRefinementFiniteFM nil)
    (Conf formal-type-decl nil SPLPartialRefinementCommon nil)
    (FM formal-type-decl nil SPLPartialRefinementCommon nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]"
     SPLPartialRefinementCommon nil)
    (Asset formal-type-decl nil SPLPartialRefinementCommon nil)
    (AssetName formal-type-decl nil SPLPartialRefinementCommon nil)
    (CK formal-type-decl nil SPLPartialRefinementCommon nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (mapping type-eq-decl nil maps nil)
    ([\|\|] formal-const-decl
     "[CK -> [mapping -> [Conf -> finite_sets[Asset].finite_set]]]"
     SPLPartialRefinementCommon nil))
   nil))
 (fmPartRef 0
  (fmPartRef-1 nil 3659523903
   ("" (skolem 1 (fm1 fm2))
    (("" (bddsimp)
      (("1" (expand "|=")
        (("1" (expand fmPartialRefinement)
          (("1" (expand subset?)
            (("1" (skolem 1 c)
              (("1" (inst -1 c)
                (("1" (expand member) (("1" (bddsimp) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand fmPartialRefinement)
        (("2" (expand "|=")
          (("2" (expand subset?)
            (("2" (skolem 1 c)
              (("2" (inst -1 c)
                (("2" (expand member) (("2" (bddsimp) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((fmPartialRefinement const-decl "bool" SPLPartialRefinementCommon
     nil)
    (member const-decl "bool" sets nil)
    (Conf formal-type-decl nil SPLPartialRefinementCommon nil)
    (subset? const-decl "bool" sets nil)
    (\|= const-decl "bool" SPLrefinement nil))
   shostak)))

