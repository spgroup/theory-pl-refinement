(SPLPartialRefTemplGen
 (amPartRef_TCC1 0
  (amPartRef_TCC1-1 nil 3657299477 ("" (subtype-tcc) nil nil) nil nil))
 (amPartRef_TCC2 0
  (amPartRef_TCC2-1 nil 3657358449 ("" (subtype-tcc) nil nil) nil nil))
 (amPartRef_TCC3 0
  (amPartRef_TCC3-1 nil 3657358449 ("" (subtype-tcc) nil nil) nil nil))
 (changeAssetStrong_TCC1 0
  (changeAssetStrong_TCC1-1 nil 3657114361 ("" (subtype-tcc) nil nil)
   nil nil))
 (changeAssetStrong_TCC2 0
  (changeAssetStrong_TCC2-1 nil 3657114361 ("" (subtype-tcc) nil nil)
   nil nil))
 (changeAssetStrong 0
  (changeAssetStrong-1 nil 3657114379
   ("" (skolem 1 (pl am2 pairs a1 a2 an s))
    (("" (expand strongPartialRefinement)
      (("" (bddsimp)
        (("" (skolem 1 c)
          (("" (lemma sameEvalPairs)
            (("" (inst -1 pl am2 pairs a1 a2 an s)
              (("" (bddsimp)
                (("" (inst -3 c)
                  (("" (lemma sameEvalPairs2)
                    (("" (inst -1 pl am2 pairs a1 a2 an s)
                      (("" (bddsimp)
                        (("" (inst -3 c)
                          (("" (bddsimp)
                            (("" (expand prod)
                              ((""
                                (replace -5 1)
                                ((""
                                  (replace -4 1)
                                  ((""
                                    (use assetRefinement)
                                    ((""
                                      (expand preorder?)
                                      ((""
                                        (flatten)
                                        ((""
                                          (expand reflexive?)
                                          ((""
                                            (inst
                                             -1
                                             "([||](K(pl))(pairs)(c))")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((strongPartialRefinement const-decl "bool" SPLpartialrefinement
     nil)
    (FM type-decl nil SPLpartialrefinement nil)
    (Conf type-decl nil SPLpartialrefinement nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    ({\|\|} const-decl "[FM -> set[Conf]]" SPLpartialrefinement nil)
    (CK type-decl nil SPLpartialrefinement nil)
    (Asset type-decl nil SPLpartialrefinement nil)
    (AssetName type-decl nil SPLpartialrefinement nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (AM type-eq-decl nil SPLpartialrefinement nil)
    ([\|\|] const-decl
     "[CK -> [AM -> [Conf -> finite_sets[Asset].finite_set]]]"
     SPLpartialrefinement nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (prod const-decl "finite_sets[Asset].finite_set"
     SPLpartialrefinement nil)
    (preorder? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil)
    (assetRefinement formula-decl nil SPLrefinement nil)
    (sameEvalPairs2 formula-decl nil SPLPartialRefTemplGen nil)
    (sameEvalPairs formula-decl nil SPLPartialRefTemplGen nil))
   shostak)))

