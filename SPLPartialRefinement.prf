(SPLPartialRefinement
 (strongPartCaseWeak_TCC1 0
  (strongPartCaseWeak_TCC1-1 nil 3656875987
   ("" (skolem 1 (pl1 pl2 m))
    (("" (bddsimp)
      (("1" (typepred m) (("1" (propax) nil nil)) nil)
       ("2" (typepred m) (("2" (propax) nil nil)) nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Conf formal-type-decl nil SPLPartialRefinement nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (unique const-decl "bool" maps nil)
    (FM formal-type-decl nil SPLPartialRefinement nil)
    ({\|\|} formal-const-decl "[FM -> set[Conf]]" SPLPartialRefinement
     nil)
    (Asset formal-type-decl nil SPLPartialRefinement nil)
    (AssetName formal-type-decl nil SPLPartialRefinement nil)
    (CK formal-type-decl nil SPLPartialRefinement nil)
    (mapping type-eq-decl nil maps nil)
    ([\|\|] formal-const-decl
     "[CK -> [mapping -> [Conf -> finite_sets[Asset].finite_set]]]"
     SPLPartialRefinement nil)
    (CM type-eq-decl nil SPLPartialRefinementWeak nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (subset? const-decl "bool" sets nil)
    (domain const-decl "finite_sets[S].finite_set" maps nil)
    (AM type-eq-decl nil SPLrefinement nil)
    (ArbitrarySPL type-eq-decl nil SPLrefinement nil)
    (wfPL const-decl "bool" SPLrefinement nil)
    (PL type-eq-decl nil SPLrefinement nil)
    (image const-decl "finite_sets[T].finite_set" maps nil))
   nil))
 (strongPartCaseWeak 0
  (strongPartCaseWeak-1 nil 3655109962
   ("" (skolem 1 (map pl1 pl2))
    (("" (bddsimp)
      (("1" (expand* weakPartialRefinement strongPartialRefinement)
        (("1" (skolem 1 c)
          (("1" (inst -2 c)
            (("1" (expand identity?)
              (("1" (inst -1 c)
                (("1" (bddsimp)
                  (("1" (replace -1 1) (("1" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand* strongPartialRefinement weakPartialRefinement)
        (("2" (skolem 1 c)
          (("2" (inst -2 c)
            (("2" (bddsimp)
              (("2" (expand identity?)
                (("2" (inst -1 c)
                  (("2" (replace -1 -3) (("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((identity? const-decl "bool" maps_identity nil)
    (Conf formal-type-decl nil SPLPartialRefinement nil)
    (weakPartialRefinement const-decl "bool" SPLPartialRefinementWeak
     nil)
    (strongPartialRefinement const-decl "bool"
     SPLPartialRefinementStrong nil))
   shostak)))

